{"ast":null,"code":"var types = require('./types');\nvar INTS = function () {\n  return [{\n    type: types.RANGE,\n    from: 48,\n    to: 57\n  }];\n};\nvar WORDS = function () {\n  return [{\n    type: types.CHAR,\n    value: 95\n  }, {\n    type: types.RANGE,\n    from: 97,\n    to: 122\n  }, {\n    type: types.RANGE,\n    from: 65,\n    to: 90\n  }].concat(INTS());\n};\nvar WHITESPACE = function () {\n  return [{\n    type: types.CHAR,\n    value: 9\n  }, {\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 11\n  }, {\n    type: types.CHAR,\n    value: 12\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 32\n  }, {\n    type: types.CHAR,\n    value: 160\n  }, {\n    type: types.CHAR,\n    value: 5760\n  }, {\n    type: types.CHAR,\n    value: 6158\n  }, {\n    type: types.CHAR,\n    value: 8192\n  }, {\n    type: types.CHAR,\n    value: 8193\n  }, {\n    type: types.CHAR,\n    value: 8194\n  }, {\n    type: types.CHAR,\n    value: 8195\n  }, {\n    type: types.CHAR,\n    value: 8196\n  }, {\n    type: types.CHAR,\n    value: 8197\n  }, {\n    type: types.CHAR,\n    value: 8198\n  }, {\n    type: types.CHAR,\n    value: 8199\n  }, {\n    type: types.CHAR,\n    value: 8200\n  }, {\n    type: types.CHAR,\n    value: 8201\n  }, {\n    type: types.CHAR,\n    value: 8202\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }, {\n    type: types.CHAR,\n    value: 8239\n  }, {\n    type: types.CHAR,\n    value: 8287\n  }, {\n    type: types.CHAR,\n    value: 12288\n  }, {\n    type: types.CHAR,\n    value: 65279\n  }];\n};\nvar NOTANYCHAR = function () {\n  return [{\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }];\n};\n\n// Predefined class objects.\nexports.words = function () {\n  return {\n    type: types.SET,\n    set: WORDS(),\n    not: false\n  };\n};\nexports.notWords = function () {\n  return {\n    type: types.SET,\n    set: WORDS(),\n    not: true\n  };\n};\nexports.ints = function () {\n  return {\n    type: types.SET,\n    set: INTS(),\n    not: false\n  };\n};\nexports.notInts = function () {\n  return {\n    type: types.SET,\n    set: INTS(),\n    not: true\n  };\n};\nexports.whitespace = function () {\n  return {\n    type: types.SET,\n    set: WHITESPACE(),\n    not: false\n  };\n};\nexports.notWhitespace = function () {\n  return {\n    type: types.SET,\n    set: WHITESPACE(),\n    not: true\n  };\n};\nexports.anyChar = function () {\n  return {\n    type: types.SET,\n    set: NOTANYCHAR(),\n    not: true\n  };\n};","map":{"version":3,"names":["types","require","INTS","type","RANGE","from","to","WORDS","CHAR","value","concat","WHITESPACE","NOTANYCHAR","exports","words","SET","set","not","notWords","ints","notInts","whitespace","notWhitespace","anyChar"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/ret/lib/sets.js"],"sourcesContent":["var types = require('./types');\n\nvar INTS = function() {\n return [{ type: types.RANGE , from: 48, to: 57 }];\n};\n\nvar WORDS = function() {\n return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nvar WHITESPACE = function() {\n return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.CHAR, value: 6158 },\n    { type: types.CHAR, value: 8192 },\n    { type: types.CHAR, value: 8193 },\n    { type: types.CHAR, value: 8194 },\n    { type: types.CHAR, value: 8195 },\n    { type: types.CHAR, value: 8196 },\n    { type: types.CHAR, value: 8197 },\n    { type: types.CHAR, value: 8198 },\n    { type: types.CHAR, value: 8199 },\n    { type: types.CHAR, value: 8200 },\n    { type: types.CHAR, value: 8201 },\n    { type: types.CHAR, value: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nvar NOTANYCHAR = function() {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = function() {\n  return { type: types.SET, set: WORDS(), not: false };\n};\n\nexports.notWords = function() {\n  return { type: types.SET, set: WORDS(), not: true };\n};\n\nexports.ints = function() {\n  return { type: types.SET, set: INTS(), not: false };\n};\n\nexports.notInts = function() {\n  return { type: types.SET, set: INTS(), not: true };\n};\n\nexports.whitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: false };\n};\n\nexports.notWhitespace = function() {\n  return { type: types.SET, set: WHITESPACE(), not: true };\n};\n\nexports.anyChar = function() {\n  return { type: types.SET, set: NOTANYCHAR(), not: true };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}