{"ast":null,"code":"'use strict';\n\nvar use = require('use');\nvar define = require('define-property');\nvar debug = require('debug')('snapdragon:compiler');\nvar utils = require('./utils');\n\n/**\n * Create a new `Compiler` with the given `options`.\n * @param {Object} `options`\n */\n\nfunction Compiler(options, state) {\n  debug('initializing', __filename);\n  this.options = utils.extend({\n    source: 'string'\n  }, options);\n  this.state = state || {};\n  this.compilers = {};\n  this.output = '';\n  this.set('eos', function (node) {\n    return this.emit(node.val, node);\n  });\n  this.set('noop', function (node) {\n    return this.emit(node.val, node);\n  });\n  this.set('bos', function (node) {\n    return this.emit(node.val, node);\n  });\n  use(this);\n}\n\n/**\n * Prototype methods\n */\n\nCompiler.prototype = {\n  /**\n   * Throw an error message with details including the cursor position.\n   * @param {String} `msg` Message to use in the Error.\n   */\n\n  error: function (msg, node) {\n    var pos = node.position || {\n      start: {\n        column: 0\n      }\n    };\n    var message = this.options.source + ' column:' + pos.start.column + ': ' + msg;\n    var err = new Error(message);\n    err.reason = msg;\n    err.column = pos.start.column;\n    err.source = this.pattern;\n    if (this.options.silent) {\n      this.errors.push(err);\n    } else {\n      throw err;\n    }\n  },\n  /**\n   * Define a non-enumberable property on the `Compiler` instance.\n   *\n   * ```js\n   * compiler.define('foo', 'bar');\n   * ```\n   * @name .define\n   * @param {String} `key` propery name\n   * @param {any} `val` property value\n   * @return {Object} Returns the Compiler instance for chaining.\n   * @api public\n   */\n\n  define: function (key, val) {\n    define(this, key, val);\n    return this;\n  },\n  /**\n   * Emit `node.val`\n   */\n\n  emit: function (str, node) {\n    this.output += str;\n    return str;\n  },\n  /**\n   * Add a compiler `fn` with the given `name`\n   */\n\n  set: function (name, fn) {\n    this.compilers[name] = fn;\n    return this;\n  },\n  /**\n   * Get compiler `name`.\n   */\n\n  get: function (name) {\n    return this.compilers[name];\n  },\n  /**\n   * Get the previous AST node.\n   */\n\n  prev: function (n) {\n    return this.ast.nodes[this.idx - (n || 1)] || {\n      type: 'bos',\n      val: ''\n    };\n  },\n  /**\n   * Get the next AST node.\n   */\n\n  next: function (n) {\n    return this.ast.nodes[this.idx + (n || 1)] || {\n      type: 'eos',\n      val: ''\n    };\n  },\n  /**\n   * Visit `node`.\n   */\n\n  visit: function (node, nodes, i) {\n    var fn = this.compilers[node.type];\n    this.idx = i;\n    if (typeof fn !== 'function') {\n      throw this.error('compiler \"' + node.type + '\" is not registered', node);\n    }\n    return fn.call(this, node, nodes, i);\n  },\n  /**\n   * Map visit over array of `nodes`.\n   */\n\n  mapVisit: function (nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('expected an array');\n    }\n    var len = nodes.length;\n    var idx = -1;\n    while (++idx < len) {\n      this.visit(nodes[idx], nodes, idx);\n    }\n    return this;\n  },\n  /**\n   * Compile `ast`.\n   */\n\n  compile: function (ast, options) {\n    var opts = utils.extend({}, this.options, options);\n    this.ast = ast;\n    this.parsingErrors = this.ast.errors;\n    this.output = '';\n\n    // source map support\n    if (opts.sourcemap) {\n      var sourcemaps = require('./source-maps');\n      sourcemaps(this);\n      this.mapVisit(this.ast.nodes);\n      this.applySourceMaps();\n      this.map = opts.sourcemap === 'generator' ? this.map : this.map.toJSON();\n      return this;\n    }\n    this.mapVisit(this.ast.nodes);\n    return this;\n  }\n};\n\n/**\n * Expose `Compiler`\n */\n\nmodule.exports = Compiler;","map":{"version":3,"names":["use","require","define","debug","utils","Compiler","options","state","__filename","extend","source","compilers","output","set","node","emit","val","prototype","error","msg","pos","position","start","column","message","err","Error","reason","pattern","silent","errors","push","key","str","name","fn","get","prev","n","ast","nodes","idx","type","next","visit","i","call","mapVisit","Array","isArray","TypeError","len","length","compile","opts","parsingErrors","sourcemap","sourcemaps","applySourceMaps","map","toJSON","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/snapdragon/lib/compiler.js"],"sourcesContent":["'use strict';\n\nvar use = require('use');\nvar define = require('define-property');\nvar debug = require('debug')('snapdragon:compiler');\nvar utils = require('./utils');\n\n/**\n * Create a new `Compiler` with the given `options`.\n * @param {Object} `options`\n */\n\nfunction Compiler(options, state) {\n  debug('initializing', __filename);\n  this.options = utils.extend({source: 'string'}, options);\n  this.state = state || {};\n  this.compilers = {};\n  this.output = '';\n  this.set('eos', function(node) {\n    return this.emit(node.val, node);\n  });\n  this.set('noop', function(node) {\n    return this.emit(node.val, node);\n  });\n  this.set('bos', function(node) {\n    return this.emit(node.val, node);\n  });\n  use(this);\n}\n\n/**\n * Prototype methods\n */\n\nCompiler.prototype = {\n\n  /**\n   * Throw an error message with details including the cursor position.\n   * @param {String} `msg` Message to use in the Error.\n   */\n\n  error: function(msg, node) {\n    var pos = node.position || {start: {column: 0}};\n    var message = this.options.source + ' column:' + pos.start.column + ': ' + msg;\n\n    var err = new Error(message);\n    err.reason = msg;\n    err.column = pos.start.column;\n    err.source = this.pattern;\n\n    if (this.options.silent) {\n      this.errors.push(err);\n    } else {\n      throw err;\n    }\n  },\n\n  /**\n   * Define a non-enumberable property on the `Compiler` instance.\n   *\n   * ```js\n   * compiler.define('foo', 'bar');\n   * ```\n   * @name .define\n   * @param {String} `key` propery name\n   * @param {any} `val` property value\n   * @return {Object} Returns the Compiler instance for chaining.\n   * @api public\n   */\n\n  define: function(key, val) {\n    define(this, key, val);\n    return this;\n  },\n\n  /**\n   * Emit `node.val`\n   */\n\n  emit: function(str, node) {\n    this.output += str;\n    return str;\n  },\n\n  /**\n   * Add a compiler `fn` with the given `name`\n   */\n\n  set: function(name, fn) {\n    this.compilers[name] = fn;\n    return this;\n  },\n\n  /**\n   * Get compiler `name`.\n   */\n\n  get: function(name) {\n    return this.compilers[name];\n  },\n\n  /**\n   * Get the previous AST node.\n   */\n\n  prev: function(n) {\n    return this.ast.nodes[this.idx - (n || 1)] || { type: 'bos', val: '' };\n  },\n\n  /**\n   * Get the next AST node.\n   */\n\n  next: function(n) {\n    return this.ast.nodes[this.idx + (n || 1)] || { type: 'eos', val: '' };\n  },\n\n  /**\n   * Visit `node`.\n   */\n\n  visit: function(node, nodes, i) {\n    var fn = this.compilers[node.type];\n    this.idx = i;\n\n    if (typeof fn !== 'function') {\n      throw this.error('compiler \"' + node.type + '\" is not registered', node);\n    }\n    return fn.call(this, node, nodes, i);\n  },\n\n  /**\n   * Map visit over array of `nodes`.\n   */\n\n  mapVisit: function(nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('expected an array');\n    }\n    var len = nodes.length;\n    var idx = -1;\n    while (++idx < len) {\n      this.visit(nodes[idx], nodes, idx);\n    }\n    return this;\n  },\n\n  /**\n   * Compile `ast`.\n   */\n\n  compile: function(ast, options) {\n    var opts = utils.extend({}, this.options, options);\n    this.ast = ast;\n    this.parsingErrors = this.ast.errors;\n    this.output = '';\n\n    // source map support\n    if (opts.sourcemap) {\n      var sourcemaps = require('./source-maps');\n      sourcemaps(this);\n      this.mapVisit(this.ast.nodes);\n      this.applySourceMaps();\n      this.map = opts.sourcemap === 'generator' ? this.map : this.map.toJSON();\n      return this;\n    }\n\n    this.mapVisit(this.ast.nodes);\n    return this;\n  }\n};\n\n/**\n * Expose `Compiler`\n */\n\nmodule.exports = Compiler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}