{"ast":null,"code":"var _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/notus-react-main/src/views/admin/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"constants.js\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  let {\n    currLocation,\n    deliveryLocation,\n    destinations,\n    zoom_level,\n    travel_mode\n  } = _ref;\n  const mapElement = useRef();\n  const [map, setMap] = useState(null);\n  const [waypoints] = useState(destinations);\n  function create_delivery_marker(location) {\n    const marker_el = document.createElement(\"div\");\n    marker_el.className = 'marker-delivery';\n    // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n    const marker = new tt.Marker({\n      element: marker_el,\n      anchor: \"bottom\"\n    }).setLngLat([location.lng, location.lat]).addTo(map);\n    return marker;\n  }\n  function create_driver_marker(location) {\n    const marker_el = document.createElement(\"div\");\n    marker_el.className = 'marker-driver';\n    const marker = new tt.Marker({\n      element: marker_el,\n      anchor: \"bottom\"\n    }).setLngLat([location.lng, location.lat]).addTo(map);\n    return marker;\n  }\n  const create_route = (locations, i) => {\n    ttservices.services.calculateRoute({\n      key: api_key,\n      locations\n    }).then(routeData => {\n      const features = routeData.toGeoJson().features;\n      features.forEach((feature, index) => {\n        map.addLayer({\n          id: \"route\" + i + index,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: feature\n          },\n          paint: {\n            \"line-color\": `red`,\n            \"line-opacity\": 0.8,\n            \"line-width\": 6,\n            \"line-dasharray\": [1, 0, 1, 0]\n          }\n        });\n      });\n    });\n  };\n  useEffect(() => {\n    let map = tt.map({\n      key: api_key,\n      container: mapElement.current,\n      center: [77.5747463, 12.9140182],\n      zoom: zoom_level\n    });\n    map.addControl(new tt.FullscreenControl());\n    map.addControl(new tt.NavigationControl());\n    setMap(map);\n    return () => map.remove();\n  }, []);\n  useEffect(() => {\n    if (map) {\n      map.on(\"load\", () => {\n        waypoints.forEach(location => {\n          create_delivery_marker(location);\n        });\n        const locations = waypoints.map(location => [location.lng, location.lat]);\n        for (let i = 0; i < locations.length; i += 150) {\n          if (i + 150 > locations.length) {\n            create_route(locations.slice(i), i);\n          }\n          create_route(locations.slice(i, i + 150), i);\n        }\n      });\n    } else {\n      console.log(\"error loading map\"); //Add better error handling function\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapElement,\n      style: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n}\n_s(Map, \"IYIj7oX3i+wKJgPiJXmWtFJH5qM=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","ttservices","tt","useEffect","useState","useRef","api_key","Map","currLocation","deliveryLocation","destinations","zoom_level","travel_mode","mapElement","map","setMap","waypoints","create_delivery_marker","location","marker_el","document","createElement","className","marker","Marker","element","anchor","setLngLat","lng","lat","addTo","create_driver_marker","create_route","locations","i","services","calculateRoute","key","then","routeData","features","toGeoJson","forEach","feature","index","addLayer","id","type","source","data","paint","container","current","center","zoom","addControl","FullscreenControl","NavigationControl","remove","on","length","slice","console","log","position","top","bottom","left","right","width","height"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/src/views/admin/Map.js"],"sourcesContent":["import React from 'react'\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"constants.js\"\nimport \"../../App.css\"\n\nfunction Map({ currLocation, deliveryLocation, destinations, zoom_level, travel_mode }) {\n    const mapElement = useRef();\n    const [map, setMap] = useState(null); \n    const [waypoints] = useState(destinations);\n\n    function create_delivery_marker(location) {\n        const marker_el = document.createElement(\"div\");\n        marker_el.className = 'marker-delivery';\n        // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n        const marker = new tt.Marker({ element: marker_el, anchor: \"bottom\" })\n        .setLngLat([location.lng, location.lat])\n        .addTo(map);\n\n        return marker;\n    }\n\n    function create_driver_marker(location) {\n      const marker_el = document.createElement(\"div\");\n      marker_el.className = 'marker-driver';\n      const marker = new tt.Marker({ element: marker_el, anchor: \"bottom\" })\n      .setLngLat([location.lng, location.lat])\n      .addTo(map);\n\n      return marker;\n    }\n\n    const create_route = (locations,i) => {\n      ttservices.services\n        .calculateRoute({\n          key: api_key,\n          locations,\n        })\n        .then((routeData) => {\n          const features = routeData.toGeoJson().features;\n          features.forEach((feature, index) => {\n            map.addLayer({\n              id: \"route\" + i+index,\n              type: \"line\",\n              source: {\n                type: \"geojson\",\n                data: feature,\n              },\n              paint: {\n                \"line-color\": `red`,\n                \"line-opacity\": 0.8,\n                \"line-width\": 6,\n                \"line-dasharray\": [1, 0, 1, 0],\n              }\n            });\n          });\n        });\n    };\n\n    useEffect(() => {\n        let map = tt.map({\n        key: api_key,\n        container: mapElement.current,\n        center: [77.5747463,12.9140182],\n        zoom: zoom_level,\n        });\n        map.addControl(new tt.FullscreenControl());\n        map.addControl(new tt.NavigationControl());\n        setMap(map);\n        return () => map.remove();\n    }, []);\n    \n    useEffect(() => {\n        if (map) {\n          map.on(\"load\", () => {\n            waypoints.forEach((location) => {\n            create_delivery_marker(location);\n              });\n            \n            const locations = waypoints.map((location) => [location.lng,location.lat])\n\n            for(let i=0;i<locations.length;i+=150){\n              if(i+150>locations.length){\n                create_route(locations.slice(i),i)\n              }\n              create_route(locations.slice(i,i+150),i)\n            }\n          });\n        }\n        else{\n            console.log(\"error loading map\"); //Add better error handling function\n        }\n      },);\n\n    return (\n      <div className=\"map_wrapper\">\n        <div \n          ref={mapElement} \n          style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: '100%',\n            height: '100%'\n          }}\n        />\n      </div>\n    );\n  }\n  export default Map;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kDAAkD;AACzD,OAAO,KAAKC,UAAU,MAAM,wCAAwC;AACpE,OAAOC,EAAE,MAAM,oCAAoC;AACnD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,cAAc;AACtC,OAAO,eAAe;AAAA;AAEtB,SAASC,GAAG,OAA4E;EAAA;EAAA,IAA3E;IAAEC,YAAY;IAAEC,gBAAgB;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAY,CAAC;EAClF,MAAMC,UAAU,GAAGR,MAAM,EAAE;EAC3B,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACY,SAAS,CAAC,GAAGZ,QAAQ,CAACM,YAAY,CAAC;EAE1C,SAASO,sBAAsB,CAACC,QAAQ,EAAE;IACtC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/CF,SAAS,CAACG,SAAS,GAAG,iBAAiB;IACvC;IACA,MAAMC,MAAM,GAAG,IAAIrB,EAAE,CAACsB,MAAM,CAAC;MAAEC,OAAO,EAAEN,SAAS;MAAEO,MAAM,EAAE;IAAS,CAAC,CAAC,CACrEC,SAAS,CAAC,CAACT,QAAQ,CAACU,GAAG,EAAEV,QAAQ,CAACW,GAAG,CAAC,CAAC,CACvCC,KAAK,CAAChB,GAAG,CAAC;IAEX,OAAOS,MAAM;EACjB;EAEA,SAASQ,oBAAoB,CAACb,QAAQ,EAAE;IACtC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC/CF,SAAS,CAACG,SAAS,GAAG,eAAe;IACrC,MAAMC,MAAM,GAAG,IAAIrB,EAAE,CAACsB,MAAM,CAAC;MAAEC,OAAO,EAAEN,SAAS;MAAEO,MAAM,EAAE;IAAS,CAAC,CAAC,CACrEC,SAAS,CAAC,CAACT,QAAQ,CAACU,GAAG,EAAEV,QAAQ,CAACW,GAAG,CAAC,CAAC,CACvCC,KAAK,CAAChB,GAAG,CAAC;IAEX,OAAOS,MAAM;EACf;EAEA,MAAMS,YAAY,GAAG,CAACC,SAAS,EAACC,CAAC,KAAK;IACpCjC,UAAU,CAACkC,QAAQ,CAChBC,cAAc,CAAC;MACdC,GAAG,EAAE/B,OAAO;MACZ2B;IACF,CAAC,CAAC,CACDK,IAAI,CAAEC,SAAS,IAAK;MACnB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,SAAS,EAAE,CAACD,QAAQ;MAC/CA,QAAQ,CAACE,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QACnC9B,GAAG,CAAC+B,QAAQ,CAAC;UACXC,EAAE,EAAE,OAAO,GAAGZ,CAAC,GAACU,KAAK;UACrBG,IAAI,EAAE,MAAM;UACZC,MAAM,EAAE;YACND,IAAI,EAAE,SAAS;YACfE,IAAI,EAAEN;UACR,CAAC;UACDO,KAAK,EAAE;YACL,YAAY,EAAG,KAAI;YACnB,cAAc,EAAE,GAAG;YACnB,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC/B;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED/C,SAAS,CAAC,MAAM;IACZ,IAAIW,GAAG,GAAGZ,EAAE,CAACY,GAAG,CAAC;MACjBuB,GAAG,EAAE/B,OAAO;MACZ6C,SAAS,EAAEtC,UAAU,CAACuC,OAAO;MAC7BC,MAAM,EAAE,CAAC,UAAU,EAAC,UAAU,CAAC;MAC/BC,IAAI,EAAE3C;IACN,CAAC,CAAC;IACFG,GAAG,CAACyC,UAAU,CAAC,IAAIrD,EAAE,CAACsD,iBAAiB,EAAE,CAAC;IAC1C1C,GAAG,CAACyC,UAAU,CAAC,IAAIrD,EAAE,CAACuD,iBAAiB,EAAE,CAAC;IAC1C1C,MAAM,CAACD,GAAG,CAAC;IACX,OAAO,MAAMA,GAAG,CAAC4C,MAAM,EAAE;EAC7B,CAAC,EAAE,EAAE,CAAC;EAENvD,SAAS,CAAC,MAAM;IACZ,IAAIW,GAAG,EAAE;MACPA,GAAG,CAAC6C,EAAE,CAAC,MAAM,EAAE,MAAM;QACnB3C,SAAS,CAAC0B,OAAO,CAAExB,QAAQ,IAAK;UAChCD,sBAAsB,CAACC,QAAQ,CAAC;QAC9B,CAAC,CAAC;QAEJ,MAAMe,SAAS,GAAGjB,SAAS,CAACF,GAAG,CAAEI,QAAQ,IAAK,CAACA,QAAQ,CAACU,GAAG,EAACV,QAAQ,CAACW,GAAG,CAAC,CAAC;QAE1E,KAAI,IAAIK,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,SAAS,CAAC2B,MAAM,EAAC1B,CAAC,IAAE,GAAG,EAAC;UACpC,IAAGA,CAAC,GAAC,GAAG,GAACD,SAAS,CAAC2B,MAAM,EAAC;YACxB5B,YAAY,CAACC,SAAS,CAAC4B,KAAK,CAAC3B,CAAC,CAAC,EAACA,CAAC,CAAC;UACpC;UACAF,YAAY,CAACC,SAAS,CAAC4B,KAAK,CAAC3B,CAAC,EAACA,CAAC,GAAC,GAAG,CAAC,EAACA,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,MACG;MACA4B,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACtC;EACF,CAAC,CAAE;;EAEL,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,uBAC1B;MACE,GAAG,EAAElD,UAAW;MAChB,KAAK,EAAE;QACLmD,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV;IAAE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAxGM/D,GAAG;AAAA,KAAHA,GAAG;AAyGV,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}