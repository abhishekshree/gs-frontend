{"ast":null,"code":"'use strict';\n\nvar isExtendable = require('is-extendable');\nvar forIn = require('for-in');\nfunction mixinDeep(target, objects) {\n  var len = arguments.length,\n    i = 0;\n  while (++i < len) {\n    var obj = arguments[i];\n    if (isObject(obj)) {\n      forIn(obj, copy, target);\n    }\n  }\n  return target;\n}\n\n/**\n * Copy properties from the source object to the\n * target object.\n *\n * @param  {*} `val`\n * @param  {String} `key`\n */\n\nfunction copy(val, key) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  var obj = this[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    this[key] = val;\n  }\n}\n\n/**\n * Returns true if `val` is an object or function.\n *\n * @param  {any} val\n * @return {Boolean}\n */\n\nfunction isObject(val) {\n  return isExtendable(val) && !Array.isArray(val);\n}\n\n/**\n * Returns true if `key` is a valid key to use when extending objects.\n *\n * @param  {String} `key`\n * @return {Boolean}\n */\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n;\n\n/**\n * Expose `mixinDeep`\n */\n\nmodule.exports = mixinDeep;","map":{"version":3,"names":["isExtendable","require","forIn","mixinDeep","target","objects","len","arguments","length","i","obj","isObject","copy","val","key","isValidKey","Array","isArray","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/mixin-deep/index.js"],"sourcesContent":["'use strict';\n\nvar isExtendable = require('is-extendable');\nvar forIn = require('for-in');\n\nfunction mixinDeep(target, objects) {\n  var len = arguments.length, i = 0;\n  while (++i < len) {\n    var obj = arguments[i];\n    if (isObject(obj)) {\n      forIn(obj, copy, target);\n    }\n  }\n  return target;\n}\n\n/**\n * Copy properties from the source object to the\n * target object.\n *\n * @param  {*} `val`\n * @param  {String} `key`\n */\n\nfunction copy(val, key) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var obj = this[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    this[key] = val;\n  }\n}\n\n/**\n * Returns true if `val` is an object or function.\n *\n * @param  {any} val\n * @return {Boolean}\n */\n\nfunction isObject(val) {\n  return isExtendable(val) && !Array.isArray(val);\n}\n\n/**\n * Returns true if `key` is a valid key to use when extending objects.\n *\n * @param  {String} `key`\n * @return {Boolean}\n */\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\n/**\n * Expose `mixinDeep`\n */\n\nmodule.exports = mixinDeep;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE7B,SAASE,SAAS,CAACC,MAAM,EAAEC,OAAO,EAAE;EAClC,IAAIC,GAAG,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAG,CAAC;EACjC,OAAO,EAAEA,CAAC,GAAGH,GAAG,EAAE;IAChB,IAAII,GAAG,GAAGH,SAAS,CAACE,CAAC,CAAC;IACtB,IAAIE,QAAQ,CAACD,GAAG,CAAC,EAAE;MACjBR,KAAK,CAACQ,GAAG,EAAEE,IAAI,EAAER,MAAM,CAAC;IAC1B;EACF;EACA,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASQ,IAAI,CAACC,GAAG,EAAEC,GAAG,EAAE;EACtB,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC,EAAE;IACpB;EACF;EAEA,IAAIJ,GAAG,GAAG,IAAI,CAACI,GAAG,CAAC;EACnB,IAAIH,QAAQ,CAACE,GAAG,CAAC,IAAIF,QAAQ,CAACD,GAAG,CAAC,EAAE;IAClCP,SAAS,CAACO,GAAG,EAAEG,GAAG,CAAC;EACrB,CAAC,MAAM;IACL,IAAI,CAACC,GAAG,CAAC,GAAGD,GAAG;EACjB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,QAAQ,CAACE,GAAG,EAAE;EACrB,OAAOb,YAAY,CAACa,GAAG,CAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,UAAU,CAACD,GAAG,EAAE;EACvB,OAAOA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,aAAa,IAAIA,GAAG,KAAK,WAAW;AAC5E;AAAC;;AAED;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGhB,SAAS"},"metadata":{},"sourceType":"script"}