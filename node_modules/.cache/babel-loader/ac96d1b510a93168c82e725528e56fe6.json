{"ast":null,"code":"import _slicedToArray from \"/home/krishnansh/Documents/WebDev/PS/gs-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/gs-frontend/src/Map.js\";\nimport React from 'react';\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"./constants.js\";\nfunction Map(_ref) {\n  var currLocation = _ref.currLocation,\n    deliveryLocation = _ref.deliveryLocation,\n    destinations = _ref.destinations,\n    zoom_level = _ref.zoom_level,\n    travel_mode = _ref.travel_mode;\n  var mapElement = useRef();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var _useState3 = useState(destinations),\n    _useState4 = _slicedToArray(_useState3, 2),\n    waypoints = _useState4[0],\n    setWayPoints = _useState4[1];\n  function create_delivery_marker(location) {\n    var marker_el = document.createElement(\"div\");\n    marker_el.className = 'marker-delivery';\n    // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n    var marker = new tt.Marker({\n      element: marker_el,\n      anchor: \"bottom\"\n    }).setLngLat([location.lng, location.lat]).addTo(map);\n    return marker;\n  }\n  function createRoute() {\n    console.log(currLocation);\n    var routeOptions = {\n      key: api_key,\n      locations: [[currLocation.lng, currLocation.lat], [deliveryLocation.lng, deliveryLocation.lat]],\n      travelMode: travel_mode,\n      vehicleCommercial: true,\n      vehicleHeading: 0\n    };\n    ttservices.services.calculateRoute(routeOptions).then(function (response) {\n      // routeOptions.locations.map((store) => \n      //    new tt.Marker().setLngLat(store).addTo(map.current)\n      // );\n      // if(map.current === undefined)\n      //   console.log(\"hi\")\n      var geojson = response.toGeoJson();\n      map.addLayer({\n        id: \"route\" + Math.random(100000),\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: geojson\n        },\n        paint: {\n          \"line-color\": \"#0f8ae2\",\n          \"line-width\": 8\n        }\n      });\n      var bounds = new tt.LngLatBounds();\n      geojson.features[0].geometry.coordinates.forEach(function (point) {\n        bounds.extend(tt.LngLat.convert(point)); // creates a bounding area\n      });\n\n      map.fitBounds(bounds, {\n        duration: 300,\n        padding: 50,\n        maxZoom: 14\n      }); // zooms the map to the searched route\n    });\n  }\n\n  useEffect(function () {\n    var map = tt.map({\n      key: api_key,\n      container: mapElement.current,\n      center: [77.5747463, 12.9140182],\n      zoom: zoom_level\n    });\n    map.addControl(new tt.FullscreenControl());\n    map.addControl(new tt.NavigationControl());\n    setMap(map);\n    return function () {\n      return map.remove();\n    };\n  }, []);\n  useEffect(function () {\n    if (map) {\n      map.on(\"load\", function () {\n        createRoute();\n        create_delivery_marker(currLocation, map);\n        create_delivery_marker(deliveryLocation, map);\n      });\n    } else {\n      console.log(\"error loading map\"); //Add better error handling function\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapElement,\n    className: \"mapDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }));\n}\nexport default Map;","map":{"version":3,"names":["React","ttservices","tt","useEffect","useState","useRef","api_key","Map","currLocation","deliveryLocation","destinations","zoom_level","travel_mode","mapElement","map","setMap","waypoints","setWayPoints","create_delivery_marker","location","marker_el","document","createElement","className","marker","Marker","element","anchor","setLngLat","lng","lat","addTo","createRoute","console","log","routeOptions","key","locations","travelMode","vehicleCommercial","vehicleHeading","services","calculateRoute","then","response","geojson","toGeoJson","addLayer","id","Math","random","type","source","data","paint","bounds","LngLatBounds","features","geometry","coordinates","forEach","point","extend","LngLat","convert","fitBounds","duration","padding","maxZoom","container","current","center","zoom","addControl","FullscreenControl","NavigationControl","remove","on"],"sources":["/home/krishnansh/Documents/WebDev/PS/gs-frontend/src/Map.js"],"sourcesContent":["import React from 'react'\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"./constants.js\"\n\nfunction Map({ currLocation, deliveryLocation, destinations, zoom_level, travel_mode }) {\n    const mapElement = useRef();\n    const [map, setMap] = useState(null); \n    const [waypoints,setWayPoints] = useState(destinations);\n\n    function create_delivery_marker(location) {\n        const marker_el = document.createElement(\"div\");\n        marker_el.className = 'marker-delivery';\n        // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n        const marker = new tt.Marker({ element: marker_el, anchor: \"bottom\" })\n        .setLngLat([location.lng, location.lat])\n        .addTo(map);\n\n        return marker;\n    }\n\n    function createRoute () {\n        console.log(currLocation)\n        const routeOptions = {\n          key: api_key,\n          locations: [\n            [currLocation.lng, currLocation.lat],\n            [deliveryLocation.lng, deliveryLocation.lat],\n          ],\n          travelMode: travel_mode,\n          vehicleCommercial: true,\n          vehicleHeading: 0,\n        };\n        \n        ttservices.services.calculateRoute(routeOptions).then((response) => {\n          // routeOptions.locations.map((store) => \n          //    new tt.Marker().setLngLat(store).addTo(map.current)\n          // );\n          // if(map.current === undefined)\n          //   console.log(\"hi\")\n          var geojson = response.toGeoJson();\n          map.addLayer({\n            id: \"route\" + Math.random(100000),\n            type: \"line\",\n            source: {\n              type: \"geojson\",\n              data: geojson,\n            },\n            paint: {\n              \"line-color\": \"#0f8ae2\",\n              \"line-width\": 8,\n            },\n          });\n     \n          var bounds = new tt.LngLatBounds();\n          geojson.features[0].geometry.coordinates.forEach(function (point) {\n            bounds.extend(tt.LngLat.convert(point)); // creates a bounding area\n          });\n          map.fitBounds(bounds, {\n            duration: 300,\n            padding: 50,\n            maxZoom: 14,\n          }); // zooms the map to the searched route\n        });\n    }\n\n    useEffect(() => {\n        let map = tt.map({\n        key: api_key,\n        container: mapElement.current,\n        center: [77.5747463,12.9140182],\n        zoom: zoom_level,\n        });\n        map.addControl(new tt.FullscreenControl());\n        map.addControl(new tt.NavigationControl());\n        setMap(map);\n        return () => map.remove();\n    }, []);\n    \n    useEffect(() => {\n        if (map) {\n          map.on(\"load\", () => {\n            createRoute()\n            create_delivery_marker(currLocation,map)\n            create_delivery_marker(deliveryLocation,map)\n          });\n        }\n        else{\n            console.log(\"error loading map\"); //Add better error handling function\n        }\n      }, [map]);\n\n    return (\n      <div className=\"map_wrapper\">\n        <div ref={mapElement} \n          className=\"mapDiv\" />\n      </div>\n    );\n  }\n  export default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}