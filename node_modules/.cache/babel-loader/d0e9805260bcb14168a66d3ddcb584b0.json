{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar Vinyl = require('vinyl');\nvar through = require('through2');\nfunction prepareSymlink(folderResolver, optResolver) {\n  if (!folderResolver) {\n    throw new Error('Invalid output folder');\n  }\n  function normalize(file, enc, cb) {\n    if (!Vinyl.isVinyl(file)) {\n      return cb(new Error('Received a non-Vinyl object in `symlink()`'));\n    }\n\n    // TODO: Remove this after people upgrade vinyl/transition from gulp-util\n    if (typeof file.isSymbolic !== 'function') {\n      file = new Vinyl(file);\n    }\n    var cwd = path.resolve(optResolver.resolve('cwd', file));\n    var outFolderPath = folderResolver.resolve('outFolder', file);\n    if (!outFolderPath) {\n      return cb(new Error('Invalid output folder'));\n    }\n    var basePath = path.resolve(cwd, outFolderPath);\n    var writePath = path.resolve(basePath, file.relative);\n\n    // Wire up new properties\n    // Note: keep the target stats for now, we may need them in link-file\n    file.stat = file.stat || new fs.Stats();\n    file.cwd = cwd;\n    file.base = basePath;\n    // This is the path we are linking *TO*\n    file.symlink = file.path;\n    file.path = writePath;\n    // We have to set contents to null for a link\n    // Otherwise `isSymbolic()` returns false\n    file.contents = null;\n    cb(null, file);\n  }\n  return through.obj(normalize);\n}\nmodule.exports = prepareSymlink;","map":{"version":3,"names":["path","require","fs","Vinyl","through","prepareSymlink","folderResolver","optResolver","Error","normalize","file","enc","cb","isVinyl","isSymbolic","cwd","resolve","outFolderPath","basePath","writePath","relative","stat","Stats","base","symlink","contents","obj","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/vinyl-fs/lib/symlink/prepare.js"],"sourcesContent":["'use strict';\n\nvar path = require('path');\n\nvar fs = require('graceful-fs');\nvar Vinyl = require('vinyl');\nvar through = require('through2');\n\nfunction prepareSymlink(folderResolver, optResolver) {\n  if (!folderResolver) {\n    throw new Error('Invalid output folder');\n  }\n\n  function normalize(file, enc, cb) {\n    if (!Vinyl.isVinyl(file)) {\n      return cb(new Error('Received a non-Vinyl object in `symlink()`'));\n    }\n\n    // TODO: Remove this after people upgrade vinyl/transition from gulp-util\n    if (typeof file.isSymbolic !== 'function') {\n      file = new Vinyl(file);\n    }\n\n    var cwd = path.resolve(optResolver.resolve('cwd', file));\n\n    var outFolderPath = folderResolver.resolve('outFolder', file);\n    if (!outFolderPath) {\n      return cb(new Error('Invalid output folder'));\n    }\n    var basePath = path.resolve(cwd, outFolderPath);\n    var writePath = path.resolve(basePath, file.relative);\n\n    // Wire up new properties\n    // Note: keep the target stats for now, we may need them in link-file\n    file.stat = (file.stat || new fs.Stats());\n    file.cwd = cwd;\n    file.base = basePath;\n    // This is the path we are linking *TO*\n    file.symlink = file.path;\n    file.path = writePath;\n    // We have to set contents to null for a link\n    // Otherwise `isSymbolic()` returns false\n    file.contents = null;\n\n    cb(null, file);\n  }\n\n  return through.obj(normalize);\n}\n\nmodule.exports = prepareSymlink;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAa,CAAC;AAC/B,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIG,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEjC,SAASI,cAAc,CAACC,cAAc,EAAEC,WAAW,EAAE;EACnD,IAAI,CAACD,cAAc,EAAE;IACnB,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,SAASC,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAEC,EAAE,EAAE;IAChC,IAAI,CAACT,KAAK,CAACU,OAAO,CAACH,IAAI,CAAC,EAAE;MACxB,OAAOE,EAAE,CAAC,IAAIJ,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACpE;;IAEA;IACA,IAAI,OAAOE,IAAI,CAACI,UAAU,KAAK,UAAU,EAAE;MACzCJ,IAAI,GAAG,IAAIP,KAAK,CAACO,IAAI,CAAC;IACxB;IAEA,IAAIK,GAAG,GAAGf,IAAI,CAACgB,OAAO,CAACT,WAAW,CAACS,OAAO,CAAC,KAAK,EAAEN,IAAI,CAAC,CAAC;IAExD,IAAIO,aAAa,GAAGX,cAAc,CAACU,OAAO,CAAC,WAAW,EAAEN,IAAI,CAAC;IAC7D,IAAI,CAACO,aAAa,EAAE;MAClB,OAAOL,EAAE,CAAC,IAAIJ,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC/C;IACA,IAAIU,QAAQ,GAAGlB,IAAI,CAACgB,OAAO,CAACD,GAAG,EAAEE,aAAa,CAAC;IAC/C,IAAIE,SAAS,GAAGnB,IAAI,CAACgB,OAAO,CAACE,QAAQ,EAAER,IAAI,CAACU,QAAQ,CAAC;;IAErD;IACA;IACAV,IAAI,CAACW,IAAI,GAAIX,IAAI,CAACW,IAAI,IAAI,IAAInB,EAAE,CAACoB,KAAK,EAAG;IACzCZ,IAAI,CAACK,GAAG,GAAGA,GAAG;IACdL,IAAI,CAACa,IAAI,GAAGL,QAAQ;IACpB;IACAR,IAAI,CAACc,OAAO,GAAGd,IAAI,CAACV,IAAI;IACxBU,IAAI,CAACV,IAAI,GAAGmB,SAAS;IACrB;IACA;IACAT,IAAI,CAACe,QAAQ,GAAG,IAAI;IAEpBb,EAAE,CAAC,IAAI,EAAEF,IAAI,CAAC;EAChB;EAEA,OAAON,OAAO,CAACsB,GAAG,CAACjB,SAAS,CAAC;AAC/B;AAEAkB,MAAM,CAACC,OAAO,GAAGvB,cAAc"},"metadata":{},"sourceType":"script"}