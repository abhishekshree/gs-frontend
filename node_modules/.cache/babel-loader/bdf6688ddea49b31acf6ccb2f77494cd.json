{"ast":null,"code":"import _slicedToArray from \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef, useState, useEffect } from 'react';\nimport Map from \"./Map.js\";\nimport { destinations } from './constants';\nfunction App() {\n  var mapElement = useRef();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var _useState3 = useState(77.5747463),\n    _useState4 = _slicedToArray(_useState3, 2),\n    longitude = _useState4[0],\n    setLongitude = _useState4[1];\n  var _useState5 = useState(12.9140182),\n    _useState6 = _slicedToArray(_useState5, 2),\n    latitude = _useState6[0],\n    setLatitude = _useState6[1];\n  var convertToPoints = function convertToPoints(lngLat) {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n  var addDeliveryMarker = function addDeliveryMarker(lngLat, map) {\n    var element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n  var drawRoute = function drawRoute(geoJson, map) {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"GROW SIMPLEE\", /*#__PURE__*/React.createElement(Map, {\n    destinations: destinations,\n    zoom_level: 11,\n    travel_mode: \"truck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","ttapi","tt","useRef","useState","useEffect","Map","destinations","App","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint"],"sources":["/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef,useState,useEffect } from 'react';\nimport Map from \"./Map.js\"\nimport { destinations } from './constants';\n\nfunction App() {\n\n  const mapElement = useRef();\n\n  const [map, setMap] = useState({});\n\n  const [longitude, setLongitude] = useState(77.5747463);\n  const [latitude, setLatitude] = useState(12.9140182);\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map)\n  }\n\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      GROW SIMPLEE\n      {/* <div className=\"map\" ref={mapElement}></div> */}\n      <Map destinations={destinations} zoom_level={11} travel_mode=\"truck\" />\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAO,kDAAkD;AACzD,OAAO,KAAKC,KAAK,MAAM,wCAAwC;AAC/D,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,SAASC,MAAM,EAACC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,GAAG,MAAM,UAAU;AAC1B,SAASC,YAAY,QAAQ,aAAa;AAE1C,SAASC,GAAG,GAAG;EAEb,IAAMC,UAAU,GAAGN,MAAM,EAAE;EAAC,gBAENC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA3BM,GAAG;IAAEC,MAAM;EAAA,iBAEgBP,QAAQ,CAAC,UAAU,CAAC;IAAA;IAA/CQ,SAAS;IAAEC,YAAY;EAAA,iBACET,QAAQ,CAAC,UAAU,CAAC;IAAA;IAA7CU,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,MAAM,EAAK;IAClC,OAAO;MACLC,KAAK,EAAE;QACLJ,QAAQ,EAAEG,MAAM,CAACE,GAAG;QACpBP,SAAS,EAAEK,MAAM,CAACG;MACpB;IACF,CAAC;EACH,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIJ,MAAM,EAAEP,GAAG,EAAK;IACzC,IAAMY,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC7CF,OAAO,CAACG,SAAS,GAAG,iBAAiB;IACrC,IAAIvB,EAAE,CAACwB,MAAM,CAAC;MACZJ,OAAO,EAAEA;IACX,CAAC,CAAC,CAACK,SAAS,CAACV,MAAM,CAAC,CAACW,KAAK,CAAClB,GAAG,CAAC;EACjC,CAAC;EAGD,IAAMmB,SAAS,GAAG,SAAZA,SAAS,CAAIC,OAAO,EAAEpB,GAAG,EAAK;IAClC,IAAIA,GAAG,CAACqB,QAAQ,CAAC,OAAO,CAAC,EAAE;MACzBrB,GAAG,CAACsB,WAAW,CAAC,OAAO,CAAC;MACxBtB,GAAG,CAACuB,YAAY,CAAC,OAAO,CAAC;IAC3B;IACAvB,GAAG,CAACwB,QAAQ,CAAC;MACXC,EAAE,EAAE,OAAO;MACXC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;QACND,IAAI,EAAE,SAAS;QACfE,IAAI,EAAER;MACR,CAAC;MACDS,KAAK,EAAE;QACL,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE;MAChB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,cAEnB,eACA,oBAAC,GAAG;IAAC,YAAY,EAAEhC,YAAa;IAAC,UAAU,EAAE,EAAG;IAAC,WAAW,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACnE;AAEV;AAEA,eAAeC,GAAG"},"metadata":{},"sourceType":"module"}