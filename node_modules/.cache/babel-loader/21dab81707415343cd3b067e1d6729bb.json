{"ast":null,"code":"'use strict';\n\nvar lead = require('lead');\nvar pumpify = require('pumpify');\nvar mkdirpStream = require('fs-mkdirp-stream');\nvar createResolver = require('resolve-options');\nvar config = require('./options');\nvar prepare = require('./prepare');\nvar sourcemap = require('./sourcemap');\nvar writeContents = require('./write-contents');\nvar folderConfig = {\n  outFolder: {\n    type: 'string'\n  }\n};\nfunction dest(outFolder, opt) {\n  if (!outFolder) {\n    throw new Error('Invalid dest() folder argument.' + ' Please specify a non-empty string or a function.');\n  }\n  var optResolver = createResolver(config, opt);\n  var folderResolver = createResolver(folderConfig, {\n    outFolder: outFolder\n  });\n  function dirpath(file, callback) {\n    var dirMode = optResolver.resolve('dirMode', file);\n    callback(null, file.dirname, dirMode);\n  }\n  var saveStream = pumpify.obj(prepare(folderResolver, optResolver), sourcemap(optResolver), mkdirpStream.obj(dirpath), writeContents(optResolver));\n\n  // Sink the output stream to start flowing\n  return lead(saveStream);\n}\nmodule.exports = dest;","map":{"version":3,"names":["lead","require","pumpify","mkdirpStream","createResolver","config","prepare","sourcemap","writeContents","folderConfig","outFolder","type","dest","opt","Error","optResolver","folderResolver","dirpath","file","callback","dirMode","resolve","dirname","saveStream","obj","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/vinyl-fs/lib/dest/index.js"],"sourcesContent":["'use strict';\n\nvar lead = require('lead');\nvar pumpify = require('pumpify');\nvar mkdirpStream = require('fs-mkdirp-stream');\nvar createResolver = require('resolve-options');\n\nvar config = require('./options');\nvar prepare = require('./prepare');\nvar sourcemap = require('./sourcemap');\nvar writeContents = require('./write-contents');\n\nvar folderConfig = {\n  outFolder: {\n    type: 'string',\n  },\n};\n\nfunction dest(outFolder, opt) {\n  if (!outFolder) {\n    throw new Error('Invalid dest() folder argument.' +\n      ' Please specify a non-empty string or a function.');\n  }\n\n  var optResolver = createResolver(config, opt);\n  var folderResolver = createResolver(folderConfig, { outFolder: outFolder });\n\n  function dirpath(file, callback) {\n    var dirMode = optResolver.resolve('dirMode', file);\n\n    callback(null, file.dirname, dirMode);\n  }\n\n  var saveStream = pumpify.obj(\n    prepare(folderResolver, optResolver),\n    sourcemap(optResolver),\n    mkdirpStream.obj(dirpath),\n    writeContents(optResolver)\n  );\n\n  // Sink the output stream to start flowing\n  return lead(saveStream);\n}\n\nmodule.exports = dest;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,YAAY,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC9C,IAAIG,cAAc,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAE/C,IAAII,MAAM,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIK,OAAO,GAAGL,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIM,SAAS,GAAGN,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIO,aAAa,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAE/C,IAAIQ,YAAY,GAAG;EACjBC,SAAS,EAAE;IACTC,IAAI,EAAE;EACR;AACF,CAAC;AAED,SAASC,IAAI,CAACF,SAAS,EAAEG,GAAG,EAAE;EAC5B,IAAI,CAACH,SAAS,EAAE;IACd,MAAM,IAAII,KAAK,CAAC,iCAAiC,GAC/C,mDAAmD,CAAC;EACxD;EAEA,IAAIC,WAAW,GAAGX,cAAc,CAACC,MAAM,EAAEQ,GAAG,CAAC;EAC7C,IAAIG,cAAc,GAAGZ,cAAc,CAACK,YAAY,EAAE;IAAEC,SAAS,EAAEA;EAAU,CAAC,CAAC;EAE3E,SAASO,OAAO,CAACC,IAAI,EAAEC,QAAQ,EAAE;IAC/B,IAAIC,OAAO,GAAGL,WAAW,CAACM,OAAO,CAAC,SAAS,EAAEH,IAAI,CAAC;IAElDC,QAAQ,CAAC,IAAI,EAAED,IAAI,CAACI,OAAO,EAAEF,OAAO,CAAC;EACvC;EAEA,IAAIG,UAAU,GAAGrB,OAAO,CAACsB,GAAG,CAC1BlB,OAAO,CAACU,cAAc,EAAED,WAAW,CAAC,EACpCR,SAAS,CAACQ,WAAW,CAAC,EACtBZ,YAAY,CAACqB,GAAG,CAACP,OAAO,CAAC,EACzBT,aAAa,CAACO,WAAW,CAAC,CAC3B;;EAED;EACA,OAAOf,IAAI,CAACuB,UAAU,CAAC;AACzB;AAEAE,MAAM,CAACC,OAAO,GAAGd,IAAI"},"metadata":{},"sourceType":"script"}