{"ast":null,"code":"\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\"),\n  callable = require(\"es5-ext/object/valid-callable\"),\n  isString = require(\"es5-ext/string/is-string\"),\n  get = require(\"./get\");\nvar isArray = Array.isArray,\n  call = Function.prototype.call,\n  some = Array.prototype.some;\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n  var mode,\n    thisArg = arguments[2],\n    result,\n    doBreak,\n    broken,\n    i,\n    length,\n    char,\n    code;\n  if (isArray(iterable) || isArguments(iterable)) mode = \"array\";else if (isString(iterable)) mode = \"string\";else iterable = get(iterable);\n  callable(cb);\n  doBreak = function () {\n    broken = true;\n  };\n  if (mode === \"array\") {\n    some.call(iterable, function (value) {\n      call.call(cb, thisArg, value, doBreak);\n      return broken;\n    });\n    return;\n  }\n  if (mode === \"string\") {\n    length = iterable.length;\n    for (i = 0; i < length; ++i) {\n      char = iterable[i];\n      if (i + 1 < length) {\n        code = char.charCodeAt(0);\n        if (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n      }\n      call.call(cb, thisArg, char, doBreak);\n      if (broken) break;\n    }\n    return;\n  }\n  result = iterable.next();\n  while (!result.done) {\n    call.call(cb, thisArg, result.value, doBreak);\n    if (broken) return;\n    result = iterable.next();\n  }\n};","map":{"version":3,"names":["isArguments","require","callable","isString","get","isArray","Array","call","Function","prototype","some","module","exports","iterable","cb","mode","thisArg","arguments","result","doBreak","broken","i","length","char","code","value","charCodeAt","next","done"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/es6-iterator/for-of.js"],"sourcesContent":["\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,+BAA+B,CAAC;EACtDC,QAAQ,GAAMD,OAAO,CAAC,+BAA+B,CAAC;EACtDE,QAAQ,GAAMF,OAAO,CAAC,0BAA0B,CAAC;EACjDG,GAAG,GAAWH,OAAO,CAAC,OAAO,CAAC;AAElC,IAAII,OAAO,GAAGC,KAAK,CAACD,OAAO;EAAEE,IAAI,GAAGC,QAAQ,CAACC,SAAS,CAACF,IAAI;EAAEG,IAAI,GAAGJ,KAAK,CAACG,SAAS,CAACC,IAAI;AAExFC,MAAM,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAEC,EAAE,CAAC,eAAe;EACtD,IAAIC,IAAI;IAAEC,OAAO,GAAGC,SAAS,CAAC,CAAC,CAAC;IAAEC,MAAM;IAAEC,OAAO;IAAEC,MAAM;IAAEC,CAAC;IAAEC,MAAM;IAAEC,IAAI;IAAEC,IAAI;EAChF,IAAInB,OAAO,CAACQ,QAAQ,CAAC,IAAIb,WAAW,CAACa,QAAQ,CAAC,EAAEE,IAAI,GAAG,OAAO,CAAC,KAC1D,IAAIZ,QAAQ,CAACU,QAAQ,CAAC,EAAEE,IAAI,GAAG,QAAQ,CAAC,KACxCF,QAAQ,GAAGT,GAAG,CAACS,QAAQ,CAAC;EAE7BX,QAAQ,CAACY,EAAE,CAAC;EACZK,OAAO,GAAG,YAAY;IACrBC,MAAM,GAAG,IAAI;EACd,CAAC;EACD,IAAIL,IAAI,KAAK,OAAO,EAAE;IACrBL,IAAI,CAACH,IAAI,CAACM,QAAQ,EAAE,UAAUY,KAAK,EAAE;MACpClB,IAAI,CAACA,IAAI,CAACO,EAAE,EAAEE,OAAO,EAAES,KAAK,EAAEN,OAAO,CAAC;MACtC,OAAOC,MAAM;IACd,CAAC,CAAC;IACF;EACD;EACA,IAAIL,IAAI,KAAK,QAAQ,EAAE;IACtBO,MAAM,GAAGT,QAAQ,CAACS,MAAM;IACxB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,EAAE,EAAED,CAAC,EAAE;MAC5BE,IAAI,GAAGV,QAAQ,CAACQ,CAAC,CAAC;MAClB,IAAIA,CAAC,GAAG,CAAC,GAAGC,MAAM,EAAE;QACnBE,IAAI,GAAGD,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC;QACzB,IAAIF,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM,EAAED,IAAI,IAAIV,QAAQ,CAAC,EAAEQ,CAAC,CAAC;MAC5D;MACAd,IAAI,CAACA,IAAI,CAACO,EAAE,EAAEE,OAAO,EAAEO,IAAI,EAAEJ,OAAO,CAAC;MACrC,IAAIC,MAAM,EAAE;IACb;IACA;EACD;EACAF,MAAM,GAAGL,QAAQ,CAACc,IAAI,EAAE;EAExB,OAAO,CAACT,MAAM,CAACU,IAAI,EAAE;IACpBrB,IAAI,CAACA,IAAI,CAACO,EAAE,EAAEE,OAAO,EAAEE,MAAM,CAACO,KAAK,EAAEN,OAAO,CAAC;IAC7C,IAAIC,MAAM,EAAE;IACZF,MAAM,GAAGL,QAAQ,CAACc,IAAI,EAAE;EACzB;AACD,CAAC"},"metadata":{},"sourceType":"script"}