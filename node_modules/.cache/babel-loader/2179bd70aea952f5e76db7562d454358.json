{"ast":null,"code":"/*!\n * define-property <https://github.com/jonschlinkert/define-property>\n *\n * Copyright (c) 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isobject = require('isobject');\nvar isDescriptor = require('is-descriptor');\nvar define = typeof Reflect !== 'undefined' && Reflect.defineProperty ? Reflect.defineProperty : Object.defineProperty;\nmodule.exports = function defineProperty(obj, key, val) {\n  if (!isobject(obj) && typeof obj !== 'function' && !Array.isArray(obj)) {\n    throw new TypeError('expected an object, function, or array');\n  }\n  if (typeof key !== 'string') {\n    throw new TypeError('expected \"key\" to be a string');\n  }\n  if (isDescriptor(val)) {\n    define(obj, key, val);\n    return obj;\n  }\n  define(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: val\n  });\n  return obj;\n};","map":{"version":3,"names":["isobject","require","isDescriptor","define","Reflect","defineProperty","Object","module","exports","obj","key","val","Array","isArray","TypeError","configurable","enumerable","writable","value"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/define-property/index.js"],"sourcesContent":["/*!\n * define-property <https://github.com/jonschlinkert/define-property>\n *\n * Copyright (c) 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isobject = require('isobject');\nvar isDescriptor = require('is-descriptor');\nvar define = (typeof Reflect !== 'undefined' && Reflect.defineProperty)\n  ? Reflect.defineProperty\n  : Object.defineProperty;\n\nmodule.exports = function defineProperty(obj, key, val) {\n  if (!isobject(obj) && typeof obj !== 'function' && !Array.isArray(obj)) {\n    throw new TypeError('expected an object, function, or array');\n  }\n\n  if (typeof key !== 'string') {\n    throw new TypeError('expected \"key\" to be a string');\n  }\n\n  if (isDescriptor(val)) {\n    define(obj, key, val);\n    return obj;\n  }\n\n  define(obj, key, {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: val\n  });\n\n  return obj;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIE,MAAM,GAAI,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,cAAc,GAClED,OAAO,CAACC,cAAc,GACtBC,MAAM,CAACD,cAAc;AAEzBE,MAAM,CAACC,OAAO,GAAG,SAASH,cAAc,CAACI,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACtD,IAAI,CAACX,QAAQ,CAACS,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,UAAU,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;IACtE,MAAM,IAAIK,SAAS,CAAC,wCAAwC,CAAC;EAC/D;EAEA,IAAI,OAAOJ,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAII,SAAS,CAAC,+BAA+B,CAAC;EACtD;EAEA,IAAIZ,YAAY,CAACS,GAAG,CAAC,EAAE;IACrBR,MAAM,CAACM,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC;IACrB,OAAOF,GAAG;EACZ;EAEAN,MAAM,CAACM,GAAG,EAAEC,GAAG,EAAE;IACfK,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAEP;EACT,CAAC,CAAC;EAEF,OAAOF,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script"}