{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar util = require('util');\nvar isBuffer = require('buffer').Buffer.isBuffer;\nvar clone = require('clone');\nvar cloneable = require('cloneable-readable');\nvar replaceExt = require('replace-ext');\nvar cloneStats = require('clone-stats');\nvar cloneBuffer = require('clone-buffer');\nvar removeTrailingSep = require('remove-trailing-separator');\nvar isStream = require('./lib/is-stream');\nvar normalize = require('./lib/normalize');\nvar inspectStream = require('./lib/inspect-stream');\nvar builtInFields = ['_contents', '_symlink', 'contents', 'stat', 'history', 'path', '_base', 'base', '_cwd', 'cwd'];\nfunction File(file) {\n  var self = this;\n  if (!file) {\n    file = {};\n  }\n\n  // Stat = files stats object\n  this.stat = file.stat || null;\n\n  // Contents = stream, buffer, or null if not read\n  this.contents = file.contents || null;\n\n  // Replay path history to ensure proper normalization and trailing sep\n  var history = Array.prototype.slice.call(file.history || []);\n  if (file.path) {\n    history.push(file.path);\n  }\n  this.history = [];\n  history.forEach(function (path) {\n    self.path = path;\n  });\n  this.cwd = file.cwd || process.cwd();\n  this.base = file.base;\n  this._isVinyl = true;\n  this._symlink = null;\n\n  // Set custom properties\n  Object.keys(file).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      self[key] = file[key];\n    }\n  });\n}\nFile.prototype.isBuffer = function () {\n  return isBuffer(this.contents);\n};\nFile.prototype.isStream = function () {\n  return isStream(this.contents);\n};\nFile.prototype.isNull = function () {\n  return this.contents === null;\n};\nFile.prototype.isDirectory = function () {\n  if (!this.isNull()) {\n    return false;\n  }\n  if (this.stat && typeof this.stat.isDirectory === 'function') {\n    return this.stat.isDirectory();\n  }\n  return false;\n};\nFile.prototype.isSymbolic = function () {\n  if (!this.isNull()) {\n    return false;\n  }\n  if (this.stat && typeof this.stat.isSymbolicLink === 'function') {\n    return this.stat.isSymbolicLink();\n  }\n  return false;\n};\nFile.prototype.clone = function (opt) {\n  var self = this;\n  if (typeof opt === 'boolean') {\n    opt = {\n      deep: opt,\n      contents: true\n    };\n  } else if (!opt) {\n    opt = {\n      deep: true,\n      contents: true\n    };\n  } else {\n    opt.deep = opt.deep === true;\n    opt.contents = opt.contents !== false;\n  }\n\n  // Clone our file contents\n  var contents;\n  if (this.isStream()) {\n    contents = this.contents.clone();\n  } else if (this.isBuffer()) {\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\n  }\n  var file = new this.constructor({\n    cwd: this.cwd,\n    base: this.base,\n    stat: this.stat ? cloneStats(this.stat) : null,\n    history: this.history.slice(),\n    contents: contents\n  });\n  if (this.isSymbolic()) {\n    file.symlink = this.symlink;\n  }\n\n  // Clone our custom properties\n  Object.keys(this).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\n    }\n  });\n  return file;\n};\nFile.prototype.inspect = function () {\n  var inspect = [];\n\n  // Use relative path if possible\n  var filePath = this.path ? this.relative : null;\n  if (filePath) {\n    inspect.push('\"' + filePath + '\"');\n  }\n  if (this.isBuffer()) {\n    inspect.push(this.contents.inspect());\n  }\n  if (this.isStream()) {\n    inspect.push(inspectStream(this.contents));\n  }\n  return '<File ' + inspect.join(' ') + '>';\n};\n\n// Newer Node.js versions use this symbol for custom inspection.\nif (util.inspect.custom) {\n  File.prototype[util.inspect.custom] = File.prototype.inspect;\n}\nFile.isCustomProp = function (key) {\n  return builtInFields.indexOf(key) === -1;\n};\nFile.isVinyl = function (file) {\n  return file && file._isVinyl === true || false;\n};\n\n// Virtual attributes\n// Or stuff with extra logic\nObject.defineProperty(File.prototype, 'contents', {\n  get: function () {\n    return this._contents;\n  },\n  set: function (val) {\n    if (!isBuffer(val) && !isStream(val) && val !== null) {\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\n    }\n\n    // Ask cloneable if the stream is a already a cloneable\n    // this avoid piping into many streams\n    // reducing the overhead of cloning\n    if (isStream(val) && !cloneable.isCloneable(val)) {\n      val = cloneable(val);\n    }\n    this._contents = val;\n  }\n});\nObject.defineProperty(File.prototype, 'cwd', {\n  get: function () {\n    return this._cwd;\n  },\n  set: function (cwd) {\n    if (!cwd || typeof cwd !== 'string') {\n      throw new Error('cwd must be a non-empty string.');\n    }\n    this._cwd = removeTrailingSep(normalize(cwd));\n  }\n});\nObject.defineProperty(File.prototype, 'base', {\n  get: function () {\n    return this._base || this._cwd;\n  },\n  set: function (base) {\n    if (base == null) {\n      delete this._base;\n      return;\n    }\n    if (typeof base !== 'string' || !base) {\n      throw new Error('base must be a non-empty string, or null/undefined.');\n    }\n    base = removeTrailingSep(normalize(base));\n    if (base !== this._cwd) {\n      this._base = base;\n    } else {\n      delete this._base;\n    }\n  }\n});\n\n// TODO: Should this be moved to vinyl-fs?\nObject.defineProperty(File.prototype, 'relative', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get relative.');\n    }\n    return path.relative(this.base, this.path);\n  },\n  set: function () {\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\n  }\n});\nObject.defineProperty(File.prototype, 'dirname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get dirname.');\n    }\n    return path.dirname(this.path);\n  },\n  set: function (dirname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set dirname.');\n    }\n    this.path = path.join(dirname, this.basename);\n  }\n});\nObject.defineProperty(File.prototype, 'basename', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get basename.');\n    }\n    return path.basename(this.path);\n  },\n  set: function (basename) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set basename.');\n    }\n    this.path = path.join(this.dirname, basename);\n  }\n});\n\n// Property for getting/setting stem of the filename.\nObject.defineProperty(File.prototype, 'stem', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get stem.');\n    }\n    return path.basename(this.path, this.extname);\n  },\n  set: function (stem) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set stem.');\n    }\n    this.path = path.join(this.dirname, stem + this.extname);\n  }\n});\nObject.defineProperty(File.prototype, 'extname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get extname.');\n    }\n    return path.extname(this.path);\n  },\n  set: function (extname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set extname.');\n    }\n    this.path = replaceExt(this.path, extname);\n  }\n});\nObject.defineProperty(File.prototype, 'path', {\n  get: function () {\n    return this.history[this.history.length - 1];\n  },\n  set: function (path) {\n    if (typeof path !== 'string') {\n      throw new Error('path should be a string.');\n    }\n    path = removeTrailingSep(normalize(path));\n\n    // Record history only when path changed\n    if (path && path !== this.path) {\n      this.history.push(path);\n    }\n  }\n});\nObject.defineProperty(File.prototype, 'symlink', {\n  get: function () {\n    return this._symlink;\n  },\n  set: function (symlink) {\n    // TODO: should this set the mode to symbolic if set?\n    if (typeof symlink !== 'string') {\n      throw new Error('symlink should be a string');\n    }\n    this._symlink = removeTrailingSep(normalize(symlink));\n  }\n});\nmodule.exports = File;","map":{"version":3,"names":["path","require","util","isBuffer","Buffer","clone","cloneable","replaceExt","cloneStats","cloneBuffer","removeTrailingSep","isStream","normalize","inspectStream","builtInFields","File","file","self","stat","contents","history","Array","prototype","slice","call","push","forEach","cwd","process","base","_isVinyl","_symlink","Object","keys","key","constructor","isCustomProp","isNull","isDirectory","isSymbolic","isSymbolicLink","opt","deep","symlink","inspect","filePath","relative","join","custom","indexOf","isVinyl","defineProperty","get","_contents","set","val","Error","isCloneable","_cwd","_base","dirname","basename","extname","stem","length","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/vinyl/index.js"],"sourcesContent":["'use strict';\n\nvar path = require('path');\nvar util = require('util');\nvar isBuffer = require('buffer').Buffer.isBuffer;\n\nvar clone = require('clone');\nvar cloneable = require('cloneable-readable');\nvar replaceExt = require('replace-ext');\nvar cloneStats = require('clone-stats');\nvar cloneBuffer = require('clone-buffer');\nvar removeTrailingSep = require('remove-trailing-separator');\n\nvar isStream = require('./lib/is-stream');\nvar normalize = require('./lib/normalize');\nvar inspectStream = require('./lib/inspect-stream');\n\nvar builtInFields = [\n  '_contents', '_symlink', 'contents', 'stat', 'history', 'path',\n  '_base', 'base', '_cwd', 'cwd',\n];\n\nfunction File(file) {\n  var self = this;\n\n  if (!file) {\n    file = {};\n  }\n\n  // Stat = files stats object\n  this.stat = file.stat || null;\n\n  // Contents = stream, buffer, or null if not read\n  this.contents = file.contents || null;\n\n  // Replay path history to ensure proper normalization and trailing sep\n  var history = Array.prototype.slice.call(file.history || []);\n  if (file.path) {\n    history.push(file.path);\n  }\n  this.history = [];\n  history.forEach(function(path) {\n    self.path = path;\n  });\n\n  this.cwd = file.cwd || process.cwd();\n  this.base = file.base;\n\n  this._isVinyl = true;\n\n  this._symlink = null;\n\n  // Set custom properties\n  Object.keys(file).forEach(function(key) {\n    if (self.constructor.isCustomProp(key)) {\n      self[key] = file[key];\n    }\n  });\n}\n\nFile.prototype.isBuffer = function() {\n  return isBuffer(this.contents);\n};\n\nFile.prototype.isStream = function() {\n  return isStream(this.contents);\n};\n\nFile.prototype.isNull = function() {\n  return (this.contents === null);\n};\n\nFile.prototype.isDirectory = function() {\n  if (!this.isNull()) {\n    return false;\n  }\n\n  if (this.stat && typeof this.stat.isDirectory === 'function') {\n    return this.stat.isDirectory();\n  }\n\n  return false;\n};\n\nFile.prototype.isSymbolic = function() {\n  if (!this.isNull()) {\n    return false;\n  }\n\n  if (this.stat && typeof this.stat.isSymbolicLink === 'function') {\n    return this.stat.isSymbolicLink();\n  }\n\n  return false;\n};\n\nFile.prototype.clone = function(opt) {\n  var self = this;\n\n  if (typeof opt === 'boolean') {\n    opt = {\n      deep: opt,\n      contents: true,\n    };\n  } else if (!opt) {\n    opt = {\n      deep: true,\n      contents: true,\n    };\n  } else {\n    opt.deep = opt.deep === true;\n    opt.contents = opt.contents !== false;\n  }\n\n  // Clone our file contents\n  var contents;\n  if (this.isStream()) {\n    contents = this.contents.clone();\n  } else if (this.isBuffer()) {\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\n  }\n\n  var file = new this.constructor({\n    cwd: this.cwd,\n    base: this.base,\n    stat: (this.stat ? cloneStats(this.stat) : null),\n    history: this.history.slice(),\n    contents: contents,\n  });\n\n  if (this.isSymbolic()) {\n    file.symlink = this.symlink;\n  }\n\n  // Clone our custom properties\n  Object.keys(this).forEach(function(key) {\n    if (self.constructor.isCustomProp(key)) {\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\n    }\n  });\n  return file;\n};\n\nFile.prototype.inspect = function() {\n  var inspect = [];\n\n  // Use relative path if possible\n  var filePath = this.path ? this.relative : null;\n\n  if (filePath) {\n    inspect.push('\"' + filePath + '\"');\n  }\n\n  if (this.isBuffer()) {\n    inspect.push(this.contents.inspect());\n  }\n\n  if (this.isStream()) {\n    inspect.push(inspectStream(this.contents));\n  }\n\n  return '<File ' + inspect.join(' ') + '>';\n};\n\n// Newer Node.js versions use this symbol for custom inspection.\nif (util.inspect.custom) {\n  File.prototype[util.inspect.custom] = File.prototype.inspect;\n}\n\nFile.isCustomProp = function(key) {\n  return builtInFields.indexOf(key) === -1;\n};\n\nFile.isVinyl = function(file) {\n  return (file && file._isVinyl === true) || false;\n};\n\n// Virtual attributes\n// Or stuff with extra logic\nObject.defineProperty(File.prototype, 'contents', {\n  get: function() {\n    return this._contents;\n  },\n  set: function(val) {\n    if (!isBuffer(val) && !isStream(val) && (val !== null)) {\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\n    }\n\n    // Ask cloneable if the stream is a already a cloneable\n    // this avoid piping into many streams\n    // reducing the overhead of cloning\n    if (isStream(val) && !cloneable.isCloneable(val)) {\n      val = cloneable(val);\n    }\n\n    this._contents = val;\n  },\n});\n\nObject.defineProperty(File.prototype, 'cwd', {\n  get: function() {\n    return this._cwd;\n  },\n  set: function(cwd) {\n    if (!cwd || typeof cwd !== 'string') {\n      throw new Error('cwd must be a non-empty string.');\n    }\n    this._cwd = removeTrailingSep(normalize(cwd));\n  },\n});\n\nObject.defineProperty(File.prototype, 'base', {\n  get: function() {\n    return this._base || this._cwd;\n  },\n  set: function(base) {\n    if (base == null) {\n      delete this._base;\n      return;\n    }\n    if (typeof base !== 'string' || !base) {\n      throw new Error('base must be a non-empty string, or null/undefined.');\n    }\n    base = removeTrailingSep(normalize(base));\n    if (base !== this._cwd) {\n      this._base = base;\n    } else {\n      delete this._base;\n    }\n  },\n});\n\n// TODO: Should this be moved to vinyl-fs?\nObject.defineProperty(File.prototype, 'relative', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get relative.');\n    }\n    return path.relative(this.base, this.path);\n  },\n  set: function() {\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\n  },\n});\n\nObject.defineProperty(File.prototype, 'dirname', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get dirname.');\n    }\n    return path.dirname(this.path);\n  },\n  set: function(dirname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set dirname.');\n    }\n    this.path = path.join(dirname, this.basename);\n  },\n});\n\nObject.defineProperty(File.prototype, 'basename', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get basename.');\n    }\n    return path.basename(this.path);\n  },\n  set: function(basename) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set basename.');\n    }\n    this.path = path.join(this.dirname, basename);\n  },\n});\n\n// Property for getting/setting stem of the filename.\nObject.defineProperty(File.prototype, 'stem', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get stem.');\n    }\n    return path.basename(this.path, this.extname);\n  },\n  set: function(stem) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set stem.');\n    }\n    this.path = path.join(this.dirname, stem + this.extname);\n  },\n});\n\nObject.defineProperty(File.prototype, 'extname', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get extname.');\n    }\n    return path.extname(this.path);\n  },\n  set: function(extname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set extname.');\n    }\n    this.path = replaceExt(this.path, extname);\n  },\n});\n\nObject.defineProperty(File.prototype, 'path', {\n  get: function() {\n    return this.history[this.history.length - 1];\n  },\n  set: function(path) {\n    if (typeof path !== 'string') {\n      throw new Error('path should be a string.');\n    }\n    path = removeTrailingSep(normalize(path));\n\n    // Record history only when path changed\n    if (path && path !== this.path) {\n      this.history.push(path);\n    }\n  },\n});\n\nObject.defineProperty(File.prototype, 'symlink', {\n  get: function() {\n    return this._symlink;\n  },\n  set: function(symlink) {\n    // TODO: should this set the mode to symbolic if set?\n    if (typeof symlink !== 'string') {\n      throw new Error('symlink should be a string');\n    }\n\n    this._symlink = removeTrailingSep(normalize(symlink));\n  },\n});\n\nmodule.exports = File;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}