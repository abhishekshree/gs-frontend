{"ast":null,"code":"'use strict';\n\nvar micromatch = require('micromatch');\nvar normalize = require('normalize-path');\nvar path = require('path'); // required for tests.\nvar arrify = function (a) {\n  return a == null ? [] : Array.isArray(a) ? a : [a];\n};\nvar anymatch = function (criteria, value, returnIndex, startIndex, endIndex) {\n  criteria = arrify(criteria);\n  value = arrify(value);\n  if (arguments.length === 1) {\n    return anymatch.bind(null, criteria.map(function (criterion) {\n      return typeof criterion === 'string' && criterion[0] !== '!' ? micromatch.matcher(criterion) : criterion;\n    }));\n  }\n  startIndex = startIndex || 0;\n  var string = value[0];\n  var altString, altValue;\n  var matched = false;\n  var matchIndex = -1;\n  function testCriteria(criterion, index) {\n    var result;\n    switch (Object.prototype.toString.call(criterion)) {\n      case '[object String]':\n        result = string === criterion || altString && altString === criterion;\n        result = result || micromatch.isMatch(string, criterion);\n        break;\n      case '[object RegExp]':\n        result = criterion.test(string) || altString && criterion.test(altString);\n        break;\n      case '[object Function]':\n        result = criterion.apply(null, value);\n        result = result || altValue && criterion.apply(null, altValue);\n        break;\n      default:\n        result = false;\n    }\n    if (result) {\n      matchIndex = index + startIndex;\n    }\n    return result;\n  }\n  var crit = criteria;\n  var negGlobs = crit.reduce(function (arr, criterion, index) {\n    if (typeof criterion === 'string' && criterion[0] === '!') {\n      if (crit === criteria) {\n        // make a copy before modifying\n        crit = crit.slice();\n      }\n      crit[index] = null;\n      arr.push(criterion.substr(1));\n    }\n    return arr;\n  }, []);\n  if (!negGlobs.length || !micromatch.any(string, negGlobs)) {\n    if (path.sep === '\\\\' && typeof string === 'string') {\n      altString = normalize(string);\n      altString = altString === string ? null : altString;\n      if (altString) altValue = [altString].concat(value.slice(1));\n    }\n    matched = crit.slice(startIndex, endIndex).some(testCriteria);\n  }\n  return returnIndex === true ? matchIndex : matched;\n};\nmodule.exports = anymatch;","map":{"version":3,"names":["micromatch","require","normalize","path","arrify","a","Array","isArray","anymatch","criteria","value","returnIndex","startIndex","endIndex","arguments","length","bind","map","criterion","matcher","string","altString","altValue","matched","matchIndex","testCriteria","index","result","Object","prototype","toString","call","isMatch","test","apply","crit","negGlobs","reduce","arr","slice","push","substr","any","sep","concat","some","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/anymatch/index.js"],"sourcesContent":["'use strict';\n\nvar micromatch = require('micromatch');\nvar normalize = require('normalize-path');\nvar path = require('path'); // required for tests.\nvar arrify = function(a) { return a == null ? [] : (Array.isArray(a) ? a : [a]); };\n\nvar anymatch = function(criteria, value, returnIndex, startIndex, endIndex) {\n  criteria = arrify(criteria);\n  value = arrify(value);\n  if (arguments.length === 1) {\n    return anymatch.bind(null, criteria.map(function(criterion) {\n      return typeof criterion === 'string' && criterion[0] !== '!' ?\n        micromatch.matcher(criterion) : criterion;\n    }));\n  }\n  startIndex = startIndex || 0;\n  var string = value[0];\n  var altString, altValue;\n  var matched = false;\n  var matchIndex = -1;\n  function testCriteria(criterion, index) {\n    var result;\n    switch (Object.prototype.toString.call(criterion)) {\n    case '[object String]':\n      result = string === criterion || altString && altString === criterion;\n      result = result || micromatch.isMatch(string, criterion);\n      break;\n    case '[object RegExp]':\n      result = criterion.test(string) || altString && criterion.test(altString);\n      break;\n    case '[object Function]':\n      result = criterion.apply(null, value);\n      result = result || altValue && criterion.apply(null, altValue);\n      break;\n    default:\n      result = false;\n    }\n    if (result) {\n      matchIndex = index + startIndex;\n    }\n    return result;\n  }\n  var crit = criteria;\n  var negGlobs = crit.reduce(function(arr, criterion, index) {\n    if (typeof criterion === 'string' && criterion[0] === '!') {\n      if (crit === criteria) {\n        // make a copy before modifying\n        crit = crit.slice();\n      }\n      crit[index] = null;\n      arr.push(criterion.substr(1));\n    }\n    return arr;\n  }, []);\n  if (!negGlobs.length || !micromatch.any(string, negGlobs)) {\n    if (path.sep === '\\\\' && typeof string === 'string') {\n      altString = normalize(string);\n      altString = altString === string ? null : altString;\n      if (altString) altValue = [altString].concat(value.slice(1));\n    }\n    matched = crit.slice(startIndex, endIndex).some(testCriteria);\n  }\n  return returnIndex === true ? matchIndex : matched;\n};\n\nmodule.exports = anymatch;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}