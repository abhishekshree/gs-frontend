{"ast":null,"code":"'use strict';\n\nvar inherits = require('util').inherits;\nvar EventEmitter = require('events').EventEmitter;\nvar DefaultRegistry = require('undertaker-registry');\nvar tree = require('./lib/tree');\nvar task = require('./lib/task');\nvar series = require('./lib/series');\nvar lastRun = require('./lib/last-run');\nvar parallel = require('./lib/parallel');\nvar registry = require('./lib/registry');\nvar _getTask = require('./lib/get-task');\nvar _setTask = require('./lib/set-task');\nfunction Undertaker(customRegistry) {\n  EventEmitter.call(this);\n  this._registry = new DefaultRegistry();\n  if (customRegistry) {\n    this.registry(customRegistry);\n  }\n  this._settle = process.env.UNDERTAKER_SETTLE === 'true';\n}\ninherits(Undertaker, EventEmitter);\nUndertaker.prototype.tree = tree;\nUndertaker.prototype.task = task;\nUndertaker.prototype.series = series;\nUndertaker.prototype.lastRun = lastRun;\nUndertaker.prototype.parallel = parallel;\nUndertaker.prototype.registry = registry;\nUndertaker.prototype._getTask = _getTask;\nUndertaker.prototype._setTask = _setTask;\nmodule.exports = Undertaker;","map":{"version":3,"names":["inherits","require","EventEmitter","DefaultRegistry","tree","task","series","lastRun","parallel","registry","_getTask","_setTask","Undertaker","customRegistry","call","_registry","_settle","process","env","UNDERTAKER_SETTLE","prototype","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/undertaker/index.js"],"sourcesContent":["'use strict';\n\nvar inherits = require('util').inherits;\nvar EventEmitter = require('events').EventEmitter;\n\nvar DefaultRegistry = require('undertaker-registry');\n\nvar tree = require('./lib/tree');\nvar task = require('./lib/task');\nvar series = require('./lib/series');\nvar lastRun = require('./lib/last-run');\nvar parallel = require('./lib/parallel');\nvar registry = require('./lib/registry');\nvar _getTask = require('./lib/get-task');\nvar _setTask = require('./lib/set-task');\n\nfunction Undertaker(customRegistry) {\n  EventEmitter.call(this);\n\n  this._registry = new DefaultRegistry();\n  if (customRegistry) {\n    this.registry(customRegistry);\n  }\n\n  this._settle = (process.env.UNDERTAKER_SETTLE === 'true');\n}\n\ninherits(Undertaker, EventEmitter);\n\n\nUndertaker.prototype.tree = tree;\n\nUndertaker.prototype.task = task;\n\nUndertaker.prototype.series = series;\n\nUndertaker.prototype.lastRun = lastRun;\n\nUndertaker.prototype.parallel = parallel;\n\nUndertaker.prototype.registry = registry;\n\nUndertaker.prototype._getTask = _getTask;\n\nUndertaker.prototype._setTask = _setTask;\n\nmodule.exports = Undertaker;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,MAAM,CAAC,CAACD,QAAQ;AACvC,IAAIE,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AAEjD,IAAIC,eAAe,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAEpD,IAAIG,IAAI,GAAGH,OAAO,CAAC,YAAY,CAAC;AAChC,IAAII,IAAI,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAChC,IAAIK,MAAM,GAAGL,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIM,OAAO,GAAGN,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIO,QAAQ,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIS,QAAQ,GAAGT,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIU,QAAQ,GAAGV,OAAO,CAAC,gBAAgB,CAAC;AAExC,SAASW,UAAU,CAACC,cAAc,EAAE;EAClCX,YAAY,CAACY,IAAI,CAAC,IAAI,CAAC;EAEvB,IAAI,CAACC,SAAS,GAAG,IAAIZ,eAAe,EAAE;EACtC,IAAIU,cAAc,EAAE;IAClB,IAAI,CAACJ,QAAQ,CAACI,cAAc,CAAC;EAC/B;EAEA,IAAI,CAACG,OAAO,GAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAAK,MAAO;AAC3D;AAEAnB,QAAQ,CAACY,UAAU,EAAEV,YAAY,CAAC;AAGlCU,UAAU,CAACQ,SAAS,CAAChB,IAAI,GAAGA,IAAI;AAEhCQ,UAAU,CAACQ,SAAS,CAACf,IAAI,GAAGA,IAAI;AAEhCO,UAAU,CAACQ,SAAS,CAACd,MAAM,GAAGA,MAAM;AAEpCM,UAAU,CAACQ,SAAS,CAACb,OAAO,GAAGA,OAAO;AAEtCK,UAAU,CAACQ,SAAS,CAACZ,QAAQ,GAAGA,QAAQ;AAExCI,UAAU,CAACQ,SAAS,CAACX,QAAQ,GAAGA,QAAQ;AAExCG,UAAU,CAACQ,SAAS,CAACV,QAAQ,GAAGA,QAAQ;AAExCE,UAAU,CAACQ,SAAS,CAACT,QAAQ,GAAGA,QAAQ;AAExCU,MAAM,CAACC,OAAO,GAAGV,UAAU"},"metadata":{},"sourceType":"script"}