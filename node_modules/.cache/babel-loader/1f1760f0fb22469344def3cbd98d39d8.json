{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar isNegated = require('is-negated-glob');\nvar isAbsolute = require('is-absolute');\nmodule.exports = function (glob, options) {\n  // default options\n  var opts = options || {};\n\n  // ensure cwd is absolute\n  var cwd = path.resolve(opts.cwd ? opts.cwd : process.cwd());\n  cwd = unixify(cwd);\n  var rootDir = opts.root;\n  // if `options.root` is defined, ensure it's absolute\n  if (rootDir) {\n    rootDir = unixify(rootDir);\n    if (process.platform === 'win32' || !isAbsolute(rootDir)) {\n      rootDir = unixify(path.resolve(rootDir));\n    }\n  }\n\n  // trim starting ./ from glob patterns\n  if (glob.slice(0, 2) === './') {\n    glob = glob.slice(2);\n  }\n\n  // when the glob pattern is only a . use an empty string\n  if (glob.length === 1 && glob === '.') {\n    glob = '';\n  }\n\n  // store last character before glob is modified\n  var suffix = glob.slice(-1);\n\n  // check to see if glob is negated (and not a leading negated-extglob)\n  var ing = isNegated(glob);\n  glob = ing.pattern;\n\n  // make glob absolute\n  if (rootDir && glob.charAt(0) === '/') {\n    glob = join(rootDir, glob);\n  } else if (!isAbsolute(glob) || glob.slice(0, 1) === '\\\\') {\n    glob = join(cwd, glob);\n  }\n\n  // if glob had a trailing `/`, re-add it now in case it was removed\n  if (suffix === '/' && glob.slice(-1) !== '/') {\n    glob += '/';\n  }\n\n  // re-add leading `!` if it was removed\n  return ing.negated ? '!' + glob : glob;\n};\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\nfunction join(dir, glob) {\n  if (dir.charAt(dir.length - 1) === '/') {\n    dir = dir.slice(0, -1);\n  }\n  if (glob.charAt(0) === '/') {\n    glob = glob.slice(1);\n  }\n  if (!glob) return dir;\n  return dir + '/' + glob;\n}","map":{"version":3,"names":["path","require","isNegated","isAbsolute","module","exports","glob","options","opts","cwd","resolve","process","unixify","rootDir","root","platform","slice","length","suffix","ing","pattern","charAt","join","negated","filepath","replace","dir"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/to-absolute-glob/index.js"],"sourcesContent":["'use strict';\n\nvar path = require('path');\nvar isNegated = require('is-negated-glob');\nvar isAbsolute = require('is-absolute');\n\nmodule.exports = function(glob, options) {\n  // default options\n  var opts = options || {};\n\n  // ensure cwd is absolute\n  var cwd = path.resolve(opts.cwd ? opts.cwd : process.cwd());\n  cwd = unixify(cwd);\n\n  var rootDir = opts.root;\n  // if `options.root` is defined, ensure it's absolute\n  if (rootDir) {\n    rootDir = unixify(rootDir);\n    if (process.platform === 'win32' || !isAbsolute(rootDir)) {\n      rootDir = unixify(path.resolve(rootDir));\n    }\n  }\n\n  // trim starting ./ from glob patterns\n  if (glob.slice(0, 2) === './') {\n    glob = glob.slice(2);\n  }\n\n  // when the glob pattern is only a . use an empty string\n  if (glob.length === 1 && glob === '.') {\n    glob = '';\n  }\n\n  // store last character before glob is modified\n  var suffix = glob.slice(-1);\n\n  // check to see if glob is negated (and not a leading negated-extglob)\n  var ing = isNegated(glob);\n  glob = ing.pattern;\n\n  // make glob absolute\n  if (rootDir && glob.charAt(0) === '/') {\n    glob = join(rootDir, glob);\n  } else if (!isAbsolute(glob) || glob.slice(0, 1) === '\\\\') {\n    glob = join(cwd, glob);\n  }\n\n  // if glob had a trailing `/`, re-add it now in case it was removed\n  if (suffix === '/' && glob.slice(-1) !== '/') {\n    glob += '/';\n  }\n\n  // re-add leading `!` if it was removed\n  return ing.negated ? '!' + glob : glob;\n};\n\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\n\nfunction join(dir, glob) {\n  if (dir.charAt(dir.length - 1) === '/') {\n    dir = dir.slice(0, -1);\n  }\n  if (glob.charAt(0) === '/') {\n    glob = glob.slice(1);\n  }\n  if (!glob) return dir;\n  return dir + '/' + glob;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC1C,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvCG,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAE;EACvC;EACA,IAAIC,IAAI,GAAGD,OAAO,IAAI,CAAC,CAAC;;EAExB;EACA,IAAIE,GAAG,GAAGT,IAAI,CAACU,OAAO,CAACF,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACC,GAAG,GAAGE,OAAO,CAACF,GAAG,EAAE,CAAC;EAC3DA,GAAG,GAAGG,OAAO,CAACH,GAAG,CAAC;EAElB,IAAII,OAAO,GAAGL,IAAI,CAACM,IAAI;EACvB;EACA,IAAID,OAAO,EAAE;IACXA,OAAO,GAAGD,OAAO,CAACC,OAAO,CAAC;IAC1B,IAAIF,OAAO,CAACI,QAAQ,KAAK,OAAO,IAAI,CAACZ,UAAU,CAACU,OAAO,CAAC,EAAE;MACxDA,OAAO,GAAGD,OAAO,CAACZ,IAAI,CAACU,OAAO,CAACG,OAAO,CAAC,CAAC;IAC1C;EACF;;EAEA;EACA,IAAIP,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IAC7BV,IAAI,GAAGA,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC;EACtB;;EAEA;EACA,IAAIV,IAAI,CAACW,MAAM,KAAK,CAAC,IAAIX,IAAI,KAAK,GAAG,EAAE;IACrCA,IAAI,GAAG,EAAE;EACX;;EAEA;EACA,IAAIY,MAAM,GAAGZ,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE3B;EACA,IAAIG,GAAG,GAAGjB,SAAS,CAACI,IAAI,CAAC;EACzBA,IAAI,GAAGa,GAAG,CAACC,OAAO;;EAElB;EACA,IAAIP,OAAO,IAAIP,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrCf,IAAI,GAAGgB,IAAI,CAACT,OAAO,EAAEP,IAAI,CAAC;EAC5B,CAAC,MAAM,IAAI,CAACH,UAAU,CAACG,IAAI,CAAC,IAAIA,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IACzDV,IAAI,GAAGgB,IAAI,CAACb,GAAG,EAAEH,IAAI,CAAC;EACxB;;EAEA;EACA,IAAIY,MAAM,KAAK,GAAG,IAAIZ,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5CV,IAAI,IAAI,GAAG;EACb;;EAEA;EACA,OAAOa,GAAG,CAACI,OAAO,GAAG,GAAG,GAAGjB,IAAI,GAAGA,IAAI;AACxC,CAAC;AAED,SAASM,OAAO,CAACY,QAAQ,EAAE;EACzB,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AACrC;AAEA,SAASH,IAAI,CAACI,GAAG,EAAEpB,IAAI,EAAE;EACvB,IAAIoB,GAAG,CAACL,MAAM,CAACK,GAAG,CAACT,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IACtCS,GAAG,GAAGA,GAAG,CAACV,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACxB;EACA,IAAIV,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC1Bf,IAAI,GAAGA,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC;EACtB;EACA,IAAI,CAACV,IAAI,EAAE,OAAOoB,GAAG;EACrB,OAAOA,GAAG,GAAG,GAAG,GAAGpB,IAAI;AACzB"},"metadata":{},"sourceType":"script"}