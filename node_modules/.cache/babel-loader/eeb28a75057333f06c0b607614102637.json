{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\nfunction isFunction(fn) {\n  return typeof fn === 'function';\n}\nfunction isConstructor(registry) {\n  if (!(registry && registry.prototype)) {\n    return false;\n  }\n  var hasProtoGet = isFunction(registry.prototype.get);\n  var hasProtoSet = isFunction(registry.prototype.set);\n  var hasProtoInit = isFunction(registry.prototype.init);\n  var hasProtoTasks = isFunction(registry.prototype.tasks);\n  if (hasProtoGet || hasProtoSet || hasProtoInit || hasProtoTasks) {\n    return true;\n  }\n  return false;\n}\nfunction validateRegistry(registry) {\n  try {\n    assert(isFunction(registry.get), 'Custom registry must have `get` function');\n    assert(isFunction(registry.set), 'Custom registry must have `set` function');\n    assert(isFunction(registry.init), 'Custom registry must have `init` function');\n    assert(isFunction(registry.tasks), 'Custom registry must have `tasks` function');\n  } catch (err) {\n    if (isConstructor(registry)) {\n      assert(false, 'Custom registries must be instantiated, but it looks like you passed a constructor');\n    } else {\n      throw err;\n    }\n  }\n}\nmodule.exports = validateRegistry;","map":{"version":3,"names":["assert","require","isFunction","fn","isConstructor","registry","prototype","hasProtoGet","get","hasProtoSet","set","hasProtoInit","init","hasProtoTasks","tasks","validateRegistry","err","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/undertaker/lib/helpers/validateRegistry.js"],"sourcesContent":["'use strict';\n\nvar assert = require('assert');\n\nfunction isFunction(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isConstructor(registry) {\n  if (!(registry && registry.prototype)) {\n    return false;\n  }\n\n  var hasProtoGet = isFunction(registry.prototype.get);\n  var hasProtoSet = isFunction(registry.prototype.set);\n  var hasProtoInit = isFunction(registry.prototype.init);\n  var hasProtoTasks = isFunction(registry.prototype.tasks);\n\n  if (hasProtoGet || hasProtoSet || hasProtoInit || hasProtoTasks) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction validateRegistry(registry) {\n  try {\n    assert(isFunction(registry.get), 'Custom registry must have `get` function');\n    assert(isFunction(registry.set), 'Custom registry must have `set` function');\n    assert(isFunction(registry.init), 'Custom registry must have `init` function');\n    assert(isFunction(registry.tasks), 'Custom registry must have `tasks` function');\n  } catch (err) {\n    if (isConstructor(registry)) {\n      assert(false, 'Custom registries must be instantiated, but it looks like you passed a constructor');\n    } else {\n      throw err;\n    }\n  }\n}\n\nmodule.exports = validateRegistry;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9B,SAASC,UAAU,CAACC,EAAE,EAAE;EACtB,OAAO,OAAOA,EAAE,KAAK,UAAU;AACjC;AAEA,SAASC,aAAa,CAACC,QAAQ,EAAE;EAC/B,IAAI,EAAEA,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAAC,EAAE;IACrC,OAAO,KAAK;EACd;EAEA,IAAIC,WAAW,GAAGL,UAAU,CAACG,QAAQ,CAACC,SAAS,CAACE,GAAG,CAAC;EACpD,IAAIC,WAAW,GAAGP,UAAU,CAACG,QAAQ,CAACC,SAAS,CAACI,GAAG,CAAC;EACpD,IAAIC,YAAY,GAAGT,UAAU,CAACG,QAAQ,CAACC,SAAS,CAACM,IAAI,CAAC;EACtD,IAAIC,aAAa,GAAGX,UAAU,CAACG,QAAQ,CAACC,SAAS,CAACQ,KAAK,CAAC;EAExD,IAAIP,WAAW,IAAIE,WAAW,IAAIE,YAAY,IAAIE,aAAa,EAAE;IAC/D,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd;AAEA,SAASE,gBAAgB,CAACV,QAAQ,EAAE;EAClC,IAAI;IACFL,MAAM,CAACE,UAAU,CAACG,QAAQ,CAACG,GAAG,CAAC,EAAE,0CAA0C,CAAC;IAC5ER,MAAM,CAACE,UAAU,CAACG,QAAQ,CAACK,GAAG,CAAC,EAAE,0CAA0C,CAAC;IAC5EV,MAAM,CAACE,UAAU,CAACG,QAAQ,CAACO,IAAI,CAAC,EAAE,2CAA2C,CAAC;IAC9EZ,MAAM,CAACE,UAAU,CAACG,QAAQ,CAACS,KAAK,CAAC,EAAE,4CAA4C,CAAC;EAClF,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,IAAIZ,aAAa,CAACC,QAAQ,CAAC,EAAE;MAC3BL,MAAM,CAAC,KAAK,EAAE,oFAAoF,CAAC;IACrG,CAAC,MAAM;MACL,MAAMgB,GAAG;IACX;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGH,gBAAgB"},"metadata":{},"sourceType":"script"}