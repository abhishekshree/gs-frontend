{"ast":null,"code":"'use strict';\n\nvar Writable = require('flush-write-stream');\nfunction listenerCount(stream, evt) {\n  return stream.listeners(evt).length;\n}\nfunction hasListeners(stream) {\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\n}\nfunction sinker(file, enc, callback) {\n  callback();\n}\nfunction sink(stream) {\n  var sinkAdded = false;\n  var sinkOptions = {\n    objectMode: stream._readableState.objectMode\n  };\n  var sinkStream = new Writable(sinkOptions, sinker);\n  function addSink() {\n    if (sinkAdded) {\n      return;\n    }\n    if (hasListeners(stream)) {\n      return;\n    }\n    sinkAdded = true;\n    stream.pipe(sinkStream);\n  }\n  function removeSink(evt) {\n    if (evt !== 'readable' && evt !== 'data') {\n      return;\n    }\n    if (hasListeners(stream)) {\n      sinkAdded = false;\n      stream.unpipe(sinkStream);\n    }\n  }\n  stream.on('newListener', removeSink);\n  stream.on('removeListener', removeSink);\n  stream.on('removeListener', addSink);\n\n  // Sink the stream to start flowing\n  // Do this on nextTick, it will flow at slowest speed of piped streams\n  process.nextTick(addSink);\n  return stream;\n}\nmodule.exports = sink;","map":{"version":3,"names":["Writable","require","listenerCount","stream","evt","listeners","length","hasListeners","sinker","file","enc","callback","sink","sinkAdded","sinkOptions","objectMode","_readableState","sinkStream","addSink","pipe","removeSink","unpipe","on","process","nextTick","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/lead/index.js"],"sourcesContent":["'use strict';\n\nvar Writable = require('flush-write-stream');\n\nfunction listenerCount(stream, evt) {\n  return stream.listeners(evt).length;\n}\n\nfunction hasListeners(stream) {\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\n}\n\nfunction sinker(file, enc, callback) {\n  callback();\n}\n\nfunction sink(stream) {\n  var sinkAdded = false;\n\n  var sinkOptions = {\n    objectMode: stream._readableState.objectMode,\n  };\n\n  var sinkStream = new Writable(sinkOptions, sinker);\n\n  function addSink() {\n    if (sinkAdded) {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      return;\n    }\n\n    sinkAdded = true;\n    stream.pipe(sinkStream);\n  }\n\n  function removeSink(evt) {\n    if (evt !== 'readable' && evt !== 'data') {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      sinkAdded = false;\n      stream.unpipe(sinkStream);\n    }\n  }\n\n  stream.on('newListener', removeSink);\n  stream.on('removeListener', removeSink);\n  stream.on('removeListener', addSink);\n\n  // Sink the stream to start flowing\n  // Do this on nextTick, it will flow at slowest speed of piped streams\n  process.nextTick(addSink);\n\n  return stream;\n}\n\nmodule.exports = sink;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE5C,SAASC,aAAa,CAACC,MAAM,EAAEC,GAAG,EAAE;EAClC,OAAOD,MAAM,CAACE,SAAS,CAACD,GAAG,CAAC,CAACE,MAAM;AACrC;AAEA,SAASC,YAAY,CAACJ,MAAM,EAAE;EAC5B,OAAO,CAAC,EAAED,aAAa,CAACC,MAAM,EAAE,UAAU,CAAC,IAAID,aAAa,CAACC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC/E;AAEA,SAASK,MAAM,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EACnCA,QAAQ,EAAE;AACZ;AAEA,SAASC,IAAI,CAACT,MAAM,EAAE;EACpB,IAAIU,SAAS,GAAG,KAAK;EAErB,IAAIC,WAAW,GAAG;IAChBC,UAAU,EAAEZ,MAAM,CAACa,cAAc,CAACD;EACpC,CAAC;EAED,IAAIE,UAAU,GAAG,IAAIjB,QAAQ,CAACc,WAAW,EAAEN,MAAM,CAAC;EAElD,SAASU,OAAO,GAAG;IACjB,IAAIL,SAAS,EAAE;MACb;IACF;IAEA,IAAIN,YAAY,CAACJ,MAAM,CAAC,EAAE;MACxB;IACF;IAEAU,SAAS,GAAG,IAAI;IAChBV,MAAM,CAACgB,IAAI,CAACF,UAAU,CAAC;EACzB;EAEA,SAASG,UAAU,CAAChB,GAAG,EAAE;IACvB,IAAIA,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,MAAM,EAAE;MACxC;IACF;IAEA,IAAIG,YAAY,CAACJ,MAAM,CAAC,EAAE;MACxBU,SAAS,GAAG,KAAK;MACjBV,MAAM,CAACkB,MAAM,CAACJ,UAAU,CAAC;IAC3B;EACF;EAEAd,MAAM,CAACmB,EAAE,CAAC,aAAa,EAAEF,UAAU,CAAC;EACpCjB,MAAM,CAACmB,EAAE,CAAC,gBAAgB,EAAEF,UAAU,CAAC;EACvCjB,MAAM,CAACmB,EAAE,CAAC,gBAAgB,EAAEJ,OAAO,CAAC;;EAEpC;EACA;EACAK,OAAO,CAACC,QAAQ,CAACN,OAAO,CAAC;EAEzB,OAAOf,MAAM;AACf;AAEAsB,MAAM,CAACC,OAAO,GAAGd,IAAI"},"metadata":{},"sourceType":"script"}