{"ast":null,"code":"'use strict';\n\nvar regex = require('regex-not');\nvar Cache = require('fragment-cache');\n\n/**\n * Utils\n */\n\nvar utils = module.exports;\nvar cache = utils.cache = new Cache();\n\n/**\n * Cast `val` to an array\n * @return {Array}\n */\n\nutils.arrayify = function (val) {\n  if (!Array.isArray(val)) {\n    return [val];\n  }\n  return val;\n};\n\n/**\n * Memoize a generated regex or function\n */\n\nutils.memoize = function (type, pattern, options, fn) {\n  var key = utils.createKey(type + pattern, options);\n  if (cache.has(type, key)) {\n    return cache.get(type, key);\n  }\n  var val = fn(pattern, options);\n  if (options && options.cache === false) {\n    return val;\n  }\n  cache.set(type, key, val);\n  return val;\n};\n\n/**\n * Create the key to use for memoization. The key is generated\n * by iterating over the options and concatenating key-value pairs\n * to the pattern string.\n */\n\nutils.createKey = function (pattern, options) {\n  var key = pattern;\n  if (typeof options === 'undefined') {\n    return key;\n  }\n  for (var prop in options) {\n    key += ';' + prop + '=' + String(options[prop]);\n  }\n  return key;\n};\n\n/**\n * Create the regex to use for matching text\n */\n\nutils.createRegex = function (str) {\n  var opts = {\n    contains: true,\n    strictClose: false\n  };\n  return regex(str, opts);\n};","map":{"version":3,"names":["regex","require","Cache","utils","module","exports","cache","arrayify","val","Array","isArray","memoize","type","pattern","options","fn","key","createKey","has","get","set","prop","String","createRegex","str","opts","contains","strictClose"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/extglob/lib/utils.js"],"sourcesContent":["'use strict';\n\nvar regex = require('regex-not');\nvar Cache = require('fragment-cache');\n\n/**\n * Utils\n */\n\nvar utils = module.exports;\nvar cache = utils.cache = new Cache();\n\n/**\n * Cast `val` to an array\n * @return {Array}\n */\n\nutils.arrayify = function(val) {\n  if (!Array.isArray(val)) {\n    return [val];\n  }\n  return val;\n};\n\n/**\n * Memoize a generated regex or function\n */\n\nutils.memoize = function(type, pattern, options, fn) {\n  var key = utils.createKey(type + pattern, options);\n\n  if (cache.has(type, key)) {\n    return cache.get(type, key);\n  }\n\n  var val = fn(pattern, options);\n  if (options && options.cache === false) {\n    return val;\n  }\n\n  cache.set(type, key, val);\n  return val;\n};\n\n/**\n * Create the key to use for memoization. The key is generated\n * by iterating over the options and concatenating key-value pairs\n * to the pattern string.\n */\n\nutils.createKey = function(pattern, options) {\n  var key = pattern;\n  if (typeof options === 'undefined') {\n    return key;\n  }\n  for (var prop in options) {\n    key += ';' + prop + '=' + String(options[prop]);\n  }\n  return key;\n};\n\n/**\n * Create the regex to use for matching text\n */\n\nutils.createRegex = function(str) {\n  var opts = {contains: true, strictClose: false};\n  return regex(str, opts);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,WAAW,CAAC;AAChC,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAErC;AACA;AACA;;AAEA,IAAIE,KAAK,GAAGC,MAAM,CAACC,OAAO;AAC1B,IAAIC,KAAK,GAAGH,KAAK,CAACG,KAAK,GAAG,IAAIJ,KAAK,EAAE;;AAErC;AACA;AACA;AACA;;AAEAC,KAAK,CAACI,QAAQ,GAAG,UAASC,GAAG,EAAE;EAC7B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACvB,OAAO,CAACA,GAAG,CAAC;EACd;EACA,OAAOA,GAAG;AACZ,CAAC;;AAED;AACA;AACA;;AAEAL,KAAK,CAACQ,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,EAAE,EAAE;EACnD,IAAIC,GAAG,GAAGb,KAAK,CAACc,SAAS,CAACL,IAAI,GAAGC,OAAO,EAAEC,OAAO,CAAC;EAElD,IAAIR,KAAK,CAACY,GAAG,CAACN,IAAI,EAAEI,GAAG,CAAC,EAAE;IACxB,OAAOV,KAAK,CAACa,GAAG,CAACP,IAAI,EAAEI,GAAG,CAAC;EAC7B;EAEA,IAAIR,GAAG,GAAGO,EAAE,CAACF,OAAO,EAAEC,OAAO,CAAC;EAC9B,IAAIA,OAAO,IAAIA,OAAO,CAACR,KAAK,KAAK,KAAK,EAAE;IACtC,OAAOE,GAAG;EACZ;EAEAF,KAAK,CAACc,GAAG,CAACR,IAAI,EAAEI,GAAG,EAAER,GAAG,CAAC;EACzB,OAAOA,GAAG;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAL,KAAK,CAACc,SAAS,GAAG,UAASJ,OAAO,EAAEC,OAAO,EAAE;EAC3C,IAAIE,GAAG,GAAGH,OAAO;EACjB,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;IAClC,OAAOE,GAAG;EACZ;EACA,KAAK,IAAIK,IAAI,IAAIP,OAAO,EAAE;IACxBE,GAAG,IAAI,GAAG,GAAGK,IAAI,GAAG,GAAG,GAAGC,MAAM,CAACR,OAAO,CAACO,IAAI,CAAC,CAAC;EACjD;EACA,OAAOL,GAAG;AACZ,CAAC;;AAED;AACA;AACA;;AAEAb,KAAK,CAACoB,WAAW,GAAG,UAASC,GAAG,EAAE;EAChC,IAAIC,IAAI,GAAG;IAACC,QAAQ,EAAE,IAAI;IAAEC,WAAW,EAAE;EAAK,CAAC;EAC/C,OAAO3B,KAAK,CAACwB,GAAG,EAAEC,IAAI,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"script"}