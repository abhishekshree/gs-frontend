{"ast":null,"code":"var _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/notus-react-main/src/views/driver/Map.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"constants.js\";\nimport \"../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  let {\n    currLocation,\n    deliveryLocation,\n    destinations,\n    zoom_level,\n    travel_mode\n  } = _ref;\n  const mapElement = useRef();\n  const [map, setMap] = useState(null);\n  const [waypoints, setWayPoints] = useState(destinations);\n  function create_delivery_marker(location) {\n    const marker_el = document.createElement(\"div\");\n    marker_el.className = 'marker-delivery';\n    // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n    const marker = new tt.Marker({\n      element: marker_el,\n      anchor: \"bottom\"\n    }).setLngLat([location.lng, location.lat]).addTo(map);\n    return marker;\n  }\n  function create_driver_marker(location) {\n    const marker_el = document.createElement(\"div\");\n    marker_el.className = 'marker-driver';\n    const marker = new tt.Marker({\n      element: marker_el,\n      anchor: \"bottom\"\n    }).setLngLat([location.lng, location.lat]).addTo(map);\n    return marker;\n  }\n  function createRoute() {\n    const routeOptions = {\n      key: api_key,\n      locations: [[currLocation.lng, currLocation.lat], [deliveryLocation.lng, deliveryLocation.lat]],\n      travelMode: travel_mode,\n      vehicleCommercial: true,\n      vehicleHeading: 0\n    };\n    ttservices.services.calculateRoute(routeOptions).then(response => {\n      var geojson = response.toGeoJson();\n      map.addLayer({\n        id: \"route\" + Math.random(100000),\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: geojson\n        },\n        paint: {\n          \"line-color\": \"#0f8ae2\",\n          \"line-width\": 8\n        }\n      });\n      var bounds = new tt.LngLatBounds();\n      geojson.features[0].geometry.coordinates.forEach(function (point) {\n        bounds.extend(tt.LngLat.convert(point)); // creates a bounding area\n      });\n\n      map.fitBounds(bounds, {\n        duration: 300,\n        padding: 50,\n        maxZoom: 14\n      }); // zooms the map to the searched route\n    });\n  }\n\n  useEffect(() => {\n    let map = tt.map({\n      key: api_key,\n      container: mapElement.current,\n      center: [77.5747463, 12.9140182],\n      zoom: zoom_level\n    });\n    map.addControl(new tt.FullscreenControl());\n    map.addControl(new tt.NavigationControl());\n    setMap(map);\n    return () => map.remove();\n  }, []);\n  useEffect(() => {\n    if (map) {\n      map.on(\"load\", () => {\n        console.log(deliveryLocation);\n        createRoute();\n        create_driver_marker(currLocation, map);\n        create_delivery_marker(deliveryLocation, map);\n      });\n    } else {\n      console.log(\"error loading map\"); //Add better error handling function\n    }\n  }, [map, currLocation, deliveryLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapElement,\n      style: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n}\n_s(Map, \"Rv6g6qufGOxGQG+i+3++3PMUpws=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","ttservices","tt","useEffect","useState","useRef","api_key","Map","currLocation","deliveryLocation","destinations","zoom_level","travel_mode","mapElement","map","setMap","waypoints","setWayPoints","create_delivery_marker","location","marker_el","document","createElement","className","marker","Marker","element","anchor","setLngLat","lng","lat","addTo","create_driver_marker","createRoute","routeOptions","key","locations","travelMode","vehicleCommercial","vehicleHeading","services","calculateRoute","then","response","geojson","toGeoJson","addLayer","id","Math","random","type","source","data","paint","bounds","LngLatBounds","features","geometry","coordinates","forEach","point","extend","LngLat","convert","fitBounds","duration","padding","maxZoom","container","current","center","zoom","addControl","FullscreenControl","NavigationControl","remove","on","console","log","position","top","bottom","left","right","width","height"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/src/views/driver/Map.js"],"sourcesContent":["import React from 'react'\nimport \"@tomtom-international/web-sdk-maps/dist/maps.css\";\nimport * as ttservices from \"@tomtom-international/web-sdk-services\";\nimport tt from \"@tomtom-international/web-sdk-maps\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { api_key } from \"constants.js\"\nimport \"../../App.css\"\n\nfunction Map({ currLocation, deliveryLocation, destinations, zoom_level, travel_mode }) {\n    const mapElement = useRef();\n    const [map, setMap] = useState(null); \n    const [waypoints,setWayPoints] = useState(destinations);\n\n    function create_delivery_marker(location) {\n        const marker_el = document.createElement(\"div\");\n        marker_el.className = 'marker-delivery';\n        // const popup = new tt.Popup({ offset: 20 }).setText(location.name);\n        const marker = new tt.Marker({ element: marker_el, anchor: \"bottom\" })\n        .setLngLat([location.lng, location.lat])\n        .addTo(map);\n\n        return marker;\n    }\n\n    function create_driver_marker(location) {\n      const marker_el = document.createElement(\"div\");\n      marker_el.className = 'marker-driver';\n      const marker = new tt.Marker({ element: marker_el, anchor: \"bottom\" })\n        .setLngLat([location.lng, location.lat])\n        .addTo(map);\n  \n      return marker;\n    }\n\n    function createRoute () {\n        const routeOptions = {\n          key: api_key,\n          locations: [\n            [currLocation.lng, currLocation.lat],\n            [deliveryLocation.lng, deliveryLocation.lat],\n          ],\n          travelMode: travel_mode,\n          vehicleCommercial: true,\n          vehicleHeading: 0,\n        };\n        \n        ttservices.services.calculateRoute(routeOptions).then((response) => {\n          var geojson = response.toGeoJson();\n          map.addLayer({\n            id: \"route\" + Math.random(100000),\n            type: \"line\",\n            source: {\n              type: \"geojson\",\n              data: geojson,\n            },\n            paint: {\n              \"line-color\": \"#0f8ae2\",\n              \"line-width\": 8,\n            },\n          });\n     \n          var bounds = new tt.LngLatBounds();\n          geojson.features[0].geometry.coordinates.forEach(function (point) {\n            bounds.extend(tt.LngLat.convert(point)); // creates a bounding area\n          });\n          map.fitBounds(bounds, {\n            duration: 300,\n            padding: 50,\n            maxZoom: 14,\n          }); // zooms the map to the searched route\n        });\n    }\n\n    useEffect(() => {\n        let map = tt.map({\n        key: api_key,\n        container: mapElement.current,\n        center: [77.5747463,12.9140182],\n        zoom: zoom_level,\n        });\n        map.addControl(new tt.FullscreenControl());\n        map.addControl(new tt.NavigationControl());\n        setMap(map);\n        return () => map.remove();\n    }, []);\n    \n    useEffect(() => {\n        if (map) {\n          map.on(\"load\", () => {\n            console.log(deliveryLocation)\n            createRoute()\n            create_driver_marker(currLocation,map)\n            create_delivery_marker(deliveryLocation,map)\n          });\n        }\n        else{\n            console.log(\"error loading map\"); //Add better error handling function\n        }\n      }, [map,currLocation,deliveryLocation]);\n\n    return (\n      <div className=\"map_wrapper\">\n        <div \n          ref={mapElement} \n          style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            width: '100%',\n            height: '100%'\n          }}\n        />\n      </div>\n    );\n  }\n  export default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module"}