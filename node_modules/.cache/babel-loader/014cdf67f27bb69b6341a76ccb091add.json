{"ast":null,"code":"'use strict';\n\nvar brackets = require('expand-brackets');\n\n/**\n * Extglob compilers\n */\n\nmodule.exports = function (extglob) {\n  function star() {\n    if (typeof extglob.options.star === 'function') {\n      return extglob.options.star.apply(this, arguments);\n    }\n    if (typeof extglob.options.star === 'string') {\n      return extglob.options.star;\n    }\n    return '.*?';\n  }\n\n  /**\n   * Use `expand-brackets` compilers\n   */\n\n  extglob.use(brackets.compilers);\n  extglob.compiler\n\n  /**\n   * Escaped: \"\\\\*\"\n   */.set('escape', function (node) {\n    return this.emit(node.val, node);\n  })\n\n  /**\n   * Dot: \".\"\n   */.set('dot', function (node) {\n    return this.emit('\\\\' + node.val, node);\n  })\n\n  /**\n   * Question mark: \"?\"\n   */.set('qmark', function (node) {\n    var val = '[^\\\\\\\\/.]';\n    var prev = this.prev();\n    if (node.parsed.slice(-1) === '(') {\n      var ch = node.rest.charAt(0);\n      if (ch !== '!' && ch !== '=' && ch !== ':') {\n        return this.emit(val, node);\n      }\n      return this.emit(node.val, node);\n    }\n    if (prev.type === 'text' && prev.val) {\n      return this.emit(val, node);\n    }\n    if (node.val.length > 1) {\n      val += '{' + node.val.length + '}';\n    }\n    return this.emit(val, node);\n  })\n\n  /**\n   * Plus: \"+\"\n   */.set('plus', function (node) {\n    var prev = node.parsed.slice(-1);\n    if (prev === ']' || prev === ')') {\n      return this.emit(node.val, node);\n    }\n    var ch = this.output.slice(-1);\n    if (!this.output || /[?*+]/.test(ch) && node.parent.type !== 'bracket') {\n      return this.emit('\\\\+', node);\n    }\n    if (/\\w/.test(ch) && !node.inside) {\n      return this.emit('+\\\\+?', node);\n    }\n    return this.emit('+', node);\n  })\n\n  /**\n   * Star: \"*\"\n   */.set('star', function (node) {\n    var prev = this.prev();\n    var prefix = prev.type !== 'text' && prev.type !== 'escape' ? '(?!\\\\.)' : '';\n    return this.emit(prefix + star.call(this, node), node);\n  })\n\n  /**\n   * Parens\n   */.set('paren', function (node) {\n    return this.mapVisit(node.nodes);\n  }).set('paren.open', function (node) {\n    var capture = this.options.capture ? '(' : '';\n    switch (node.parent.prefix) {\n      case '!':\n      case '^':\n        return this.emit(capture + '(?:(?!(?:', node);\n      case '*':\n      case '+':\n      case '?':\n      case '@':\n        return this.emit(capture + '(?:', node);\n      default:\n        {\n          var val = node.val;\n          if (this.options.bash === true) {\n            val = '\\\\' + val;\n          } else if (!this.options.capture && val === '(' && node.parent.rest[0] !== '?') {\n            val += '?:';\n          }\n          return this.emit(val, node);\n        }\n    }\n  }).set('paren.close', function (node) {\n    var capture = this.options.capture ? ')' : '';\n    switch (node.prefix) {\n      case '!':\n      case '^':\n        var prefix = /^(\\)|$)/.test(node.rest) ? '$' : '';\n        var str = star.call(this, node);\n\n        // if the extglob has a slash explicitly defined, we know the user wants\n        // to match slashes, so we need to ensure the \"star\" regex allows for it\n        if (node.parent.hasSlash && !this.options.star && this.options.slash !== false) {\n          str = '.*?';\n        }\n        return this.emit(prefix + ('))' + str + ')') + capture, node);\n      case '*':\n      case '+':\n      case '?':\n        return this.emit(')' + node.prefix + capture, node);\n      case '@':\n        return this.emit(')' + capture, node);\n      default:\n        {\n          var val = (this.options.bash === true ? '\\\\' : '') + ')';\n          return this.emit(val, node);\n        }\n    }\n  })\n\n  /**\n   * Text\n   */.set('text', function (node) {\n    var val = node.val.replace(/[\\[\\]]/g, '\\\\$&');\n    return this.emit(val, node);\n  });\n};","map":{"version":3,"names":["brackets","require","module","exports","extglob","star","options","apply","arguments","use","compilers","compiler","set","node","emit","val","prev","parsed","slice","ch","rest","charAt","type","length","output","test","parent","inside","prefix","call","mapVisit","nodes","capture","bash","str","hasSlash","slash","replace"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/extglob/lib/compilers.js"],"sourcesContent":["'use strict';\n\nvar brackets = require('expand-brackets');\n\n/**\n * Extglob compilers\n */\n\nmodule.exports = function(extglob) {\n  function star() {\n    if (typeof extglob.options.star === 'function') {\n      return extglob.options.star.apply(this, arguments);\n    }\n    if (typeof extglob.options.star === 'string') {\n      return extglob.options.star;\n    }\n    return '.*?';\n  }\n\n  /**\n   * Use `expand-brackets` compilers\n   */\n\n  extglob.use(brackets.compilers);\n  extglob.compiler\n\n    /**\n     * Escaped: \"\\\\*\"\n     */\n\n    .set('escape', function(node) {\n      return this.emit(node.val, node);\n    })\n\n    /**\n     * Dot: \".\"\n     */\n\n    .set('dot', function(node) {\n      return this.emit('\\\\' + node.val, node);\n    })\n\n    /**\n     * Question mark: \"?\"\n     */\n\n    .set('qmark', function(node) {\n      var val = '[^\\\\\\\\/.]';\n      var prev = this.prev();\n\n      if (node.parsed.slice(-1) === '(') {\n        var ch = node.rest.charAt(0);\n        if (ch !== '!' && ch !== '=' && ch !== ':') {\n          return this.emit(val, node);\n        }\n        return this.emit(node.val, node);\n      }\n\n      if (prev.type === 'text' && prev.val) {\n        return this.emit(val, node);\n      }\n\n      if (node.val.length > 1) {\n        val += '{' + node.val.length + '}';\n      }\n      return this.emit(val, node);\n    })\n\n    /**\n     * Plus: \"+\"\n     */\n\n    .set('plus', function(node) {\n      var prev = node.parsed.slice(-1);\n      if (prev === ']' || prev === ')') {\n        return this.emit(node.val, node);\n      }\n      var ch = this.output.slice(-1);\n      if (!this.output || (/[?*+]/.test(ch) && node.parent.type !== 'bracket')) {\n        return this.emit('\\\\+', node);\n      }\n      if (/\\w/.test(ch) && !node.inside) {\n        return this.emit('+\\\\+?', node);\n      }\n      return this.emit('+', node);\n    })\n\n    /**\n     * Star: \"*\"\n     */\n\n    .set('star', function(node) {\n      var prev = this.prev();\n      var prefix = prev.type !== 'text' && prev.type !== 'escape'\n        ? '(?!\\\\.)'\n        : '';\n\n      return this.emit(prefix + star.call(this, node), node);\n    })\n\n    /**\n     * Parens\n     */\n\n    .set('paren', function(node) {\n      return this.mapVisit(node.nodes);\n    })\n    .set('paren.open', function(node) {\n      var capture = this.options.capture ? '(' : '';\n\n      switch (node.parent.prefix) {\n        case '!':\n        case '^':\n          return this.emit(capture + '(?:(?!(?:', node);\n        case '*':\n        case '+':\n        case '?':\n        case '@':\n          return this.emit(capture + '(?:', node);\n        default: {\n          var val = node.val;\n          if (this.options.bash === true) {\n            val = '\\\\' + val;\n          } else if (!this.options.capture && val === '(' && node.parent.rest[0] !== '?') {\n            val += '?:';\n          }\n\n          return this.emit(val, node);\n        }\n      }\n    })\n    .set('paren.close', function(node) {\n      var capture = this.options.capture ? ')' : '';\n\n      switch (node.prefix) {\n        case '!':\n        case '^':\n          var prefix = /^(\\)|$)/.test(node.rest) ? '$' : '';\n          var str = star.call(this, node);\n\n          // if the extglob has a slash explicitly defined, we know the user wants\n          // to match slashes, so we need to ensure the \"star\" regex allows for it\n          if (node.parent.hasSlash && !this.options.star && this.options.slash !== false) {\n            str = '.*?';\n          }\n\n          return this.emit(prefix + ('))' + str + ')') + capture, node);\n        case '*':\n        case '+':\n        case '?':\n          return this.emit(')' + node.prefix + capture, node);\n        case '@':\n          return this.emit(')' + capture, node);\n        default: {\n          var val = (this.options.bash === true ? '\\\\' : '') + ')';\n          return this.emit(val, node);\n        }\n      }\n    })\n\n    /**\n     * Text\n     */\n\n    .set('text', function(node) {\n      var val = node.val.replace(/[\\[\\]]/g, '\\\\$&');\n      return this.emit(val, node);\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}