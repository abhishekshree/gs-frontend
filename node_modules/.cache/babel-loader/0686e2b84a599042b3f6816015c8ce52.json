{"ast":null,"code":"'use strict';\n\nvar isRelative = require('is-relative');\nvar isWindows = require('is-windows');\n\n/**\n * Expose `isAbsolute`\n */\n\nmodule.exports = isAbsolute;\n\n/**\n * Returns true if a file path is absolute.\n *\n * @param  {String} `fp`\n * @return {Boolean}\n */\n\nfunction isAbsolute(fp) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('isAbsolute expects a string.');\n  }\n  return isWindows() ? isAbsolute.win32(fp) : isAbsolute.posix(fp);\n}\n\n/**\n * Test posix paths.\n */\n\nisAbsolute.posix = function posixPath(fp) {\n  return fp.charAt(0) === '/';\n};\n\n/**\n * Test windows paths.\n */\n\nisAbsolute.win32 = function win32(fp) {\n  if (/[a-z]/i.test(fp.charAt(0)) && fp.charAt(1) === ':' && fp.charAt(2) === '\\\\') {\n    return true;\n  }\n  // Microsoft Azure absolute filepath\n  if (fp.slice(0, 2) === '\\\\\\\\') {\n    return true;\n  }\n  return !isRelative(fp);\n};","map":{"version":3,"names":["isRelative","require","isWindows","module","exports","isAbsolute","fp","TypeError","win32","posix","posixPath","charAt","test","slice"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/is-absolute/index.js"],"sourcesContent":["'use strict';\n\nvar isRelative = require('is-relative');\nvar isWindows = require('is-windows');\n\n/**\n * Expose `isAbsolute`\n */\n\nmodule.exports = isAbsolute;\n\n/**\n * Returns true if a file path is absolute.\n *\n * @param  {String} `fp`\n * @return {Boolean}\n */\n\nfunction isAbsolute(fp) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('isAbsolute expects a string.');\n  }\n  return isWindows() ? isAbsolute.win32(fp) : isAbsolute.posix(fp);\n}\n\n/**\n * Test posix paths.\n */\n\nisAbsolute.posix = function posixPath(fp) {\n  return fp.charAt(0) === '/';\n};\n\n/**\n * Test windows paths.\n */\n\nisAbsolute.win32 = function win32(fp) {\n  if (/[a-z]/i.test(fp.charAt(0)) && fp.charAt(1) === ':' && fp.charAt(2) === '\\\\') {\n    return true;\n  }\n  // Microsoft Azure absolute filepath\n  if (fp.slice(0, 2) === '\\\\\\\\') {\n    return true;\n  }\n  return !isRelative(fp);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAErC;AACA;AACA;;AAEAE,MAAM,CAACC,OAAO,GAAGC,UAAU;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,CAACC,EAAE,EAAE;EACtB,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;IAC1B,MAAM,IAAIC,SAAS,CAAC,8BAA8B,CAAC;EACrD;EACA,OAAOL,SAAS,EAAE,GAAGG,UAAU,CAACG,KAAK,CAACF,EAAE,CAAC,GAAGD,UAAU,CAACI,KAAK,CAACH,EAAE,CAAC;AAClE;;AAEA;AACA;AACA;;AAEAD,UAAU,CAACI,KAAK,GAAG,SAASC,SAAS,CAACJ,EAAE,EAAE;EACxC,OAAOA,EAAE,CAACK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AAC7B,CAAC;;AAED;AACA;AACA;;AAEAN,UAAU,CAACG,KAAK,GAAG,SAASA,KAAK,CAACF,EAAE,EAAE;EACpC,IAAI,QAAQ,CAACM,IAAI,CAACN,EAAE,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIL,EAAE,CAACK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIL,EAAE,CAACK,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IAChF,OAAO,IAAI;EACb;EACA;EACA,IAAIL,EAAE,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,OAAO,CAACb,UAAU,CAACM,EAAE,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script"}