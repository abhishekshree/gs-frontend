{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\nvar define = require('define-property');\n\n/**\n * Text regex\n */\n\nvar TEXT_REGEX = '(\\\\[(?=.*\\\\])|\\\\])+';\nvar not = utils.createRegex(TEXT_REGEX);\n\n/**\n * Brackets parsers\n */\n\nfunction parsers(brackets) {\n  brackets.state = brackets.state || {};\n  brackets.parser.sets.bracket = brackets.parser.sets.bracket || [];\n  brackets.parser.capture('escape', function () {\n    if (this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(/^\\\\(.)/);\n    if (!m) return;\n    return pos({\n      type: 'escape',\n      val: m[0]\n    });\n  })\n\n  /**\n   * Text parser\n   */.capture('text', function () {\n    if (this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(not);\n    if (!m || !m[0]) return;\n    return pos({\n      type: 'text',\n      val: m[0]\n    });\n  })\n\n  /**\n   * POSIX character classes: \"[[:alpha:][:digits:]]\"\n   */.capture('posix', function () {\n    var pos = this.position();\n    var m = this.match(/^\\[:(.*?):\\](?=.*\\])/);\n    if (!m) return;\n    var inside = this.isInside('bracket');\n    if (inside) {\n      brackets.posix++;\n    }\n    return pos({\n      type: 'posix',\n      insideBracket: inside,\n      inner: m[1],\n      val: m[0]\n    });\n  })\n\n  /**\n   * Bracket (noop)\n   */.capture('bracket', function () {})\n\n  /**\n   * Open: '['\n   */.capture('bracket.open', function () {\n    var parsed = this.parsed;\n    var pos = this.position();\n    var m = this.match(/^\\[(?=.*\\])/);\n    if (!m) return;\n    var prev = this.prev();\n    var last = utils.last(prev.nodes);\n    if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n      last.val = last.val.slice(0, last.val.length - 1);\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    }\n    var open = pos({\n      type: 'bracket.open',\n      val: m[0]\n    });\n    if (last.type === 'bracket.open' || this.isInside('bracket')) {\n      open.val = '\\\\' + open.val;\n      open.type = 'bracket.inner';\n      open.escaped = true;\n      return open;\n    }\n    var node = pos({\n      type: 'bracket',\n      nodes: [open]\n    });\n    define(node, 'parent', prev);\n    define(open, 'parent', node);\n    this.push('bracket', node);\n    prev.nodes.push(node);\n  })\n\n  /**\n   * Bracket text\n   */.capture('bracket.inner', function () {\n    if (!this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(not);\n    if (!m || !m[0]) return;\n    var next = this.input.charAt(0);\n    var val = m[0];\n    var node = pos({\n      type: 'bracket.inner',\n      val: val\n    });\n    if (val === '\\\\\\\\') {\n      return node;\n    }\n    var first = val.charAt(0);\n    var last = val.slice(-1);\n    if (first === '!') {\n      val = '^' + val.slice(1);\n    }\n    if (last === '\\\\' || val === '^' && next === ']') {\n      val += this.input[0];\n      this.consume(1);\n    }\n    node.val = val;\n    return node;\n  })\n\n  /**\n   * Close: ']'\n   */.capture('bracket.close', function () {\n    var parsed = this.parsed;\n    var pos = this.position();\n    var m = this.match(/^\\]/);\n    if (!m) return;\n    var prev = this.prev();\n    var last = utils.last(prev.nodes);\n    if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n      last.val = last.val.slice(0, last.val.length - 1);\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    }\n    var node = pos({\n      type: 'bracket.close',\n      rest: this.input,\n      val: m[0]\n    });\n    if (last.type === 'bracket.open') {\n      node.type = 'bracket.inner';\n      node.escaped = true;\n      return node;\n    }\n    var bracket = this.pop('bracket');\n    if (!this.isType(bracket, 'bracket')) {\n      if (this.options.strict) {\n        throw new Error('missing opening \"[\"');\n      }\n      node.type = 'bracket.inner';\n      node.escaped = true;\n      return node;\n    }\n    bracket.nodes.push(node);\n    define(node, 'parent', bracket);\n  });\n}\n\n/**\n * Brackets parsers\n */\n\nmodule.exports = parsers;\n\n/**\n * Expose text regex\n */\n\nmodule.exports.TEXT_REGEX = TEXT_REGEX;","map":{"version":3,"names":["utils","require","define","TEXT_REGEX","not","createRegex","parsers","brackets","state","parser","sets","bracket","capture","isInside","pos","position","m","match","type","val","inside","posix","insideBracket","inner","parsed","prev","last","nodes","slice","length","open","escaped","node","push","next","input","charAt","first","consume","rest","pop","isType","options","strict","Error","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/expand-brackets/lib/parsers.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar define = require('define-property');\n\n/**\n * Text regex\n */\n\nvar TEXT_REGEX = '(\\\\[(?=.*\\\\])|\\\\])+';\nvar not = utils.createRegex(TEXT_REGEX);\n\n/**\n * Brackets parsers\n */\n\nfunction parsers(brackets) {\n  brackets.state = brackets.state || {};\n  brackets.parser.sets.bracket = brackets.parser.sets.bracket || [];\n  brackets.parser\n\n    .capture('escape', function() {\n      if (this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(/^\\\\(.)/);\n      if (!m) return;\n\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    })\n\n    /**\n     * Text parser\n     */\n\n    .capture('text', function() {\n      if (this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(not);\n      if (!m || !m[0]) return;\n\n      return pos({\n        type: 'text',\n        val: m[0]\n      });\n    })\n\n    /**\n     * POSIX character classes: \"[[:alpha:][:digits:]]\"\n     */\n\n    .capture('posix', function() {\n      var pos = this.position();\n      var m = this.match(/^\\[:(.*?):\\](?=.*\\])/);\n      if (!m) return;\n\n      var inside = this.isInside('bracket');\n      if (inside) {\n        brackets.posix++;\n      }\n\n      return pos({\n        type: 'posix',\n        insideBracket: inside,\n        inner: m[1],\n        val: m[0]\n      });\n    })\n\n    /**\n     * Bracket (noop)\n     */\n\n    .capture('bracket', function() {})\n\n    /**\n     * Open: '['\n     */\n\n    .capture('bracket.open', function() {\n      var parsed = this.parsed;\n      var pos = this.position();\n      var m = this.match(/^\\[(?=.*\\])/);\n      if (!m) return;\n\n      var prev = this.prev();\n      var last = utils.last(prev.nodes);\n\n      if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n        last.val = last.val.slice(0, last.val.length - 1);\n        return pos({\n          type: 'escape',\n          val: m[0]\n        });\n      }\n\n      var open = pos({\n        type: 'bracket.open',\n        val: m[0]\n      });\n\n      if (last.type === 'bracket.open' || this.isInside('bracket')) {\n        open.val = '\\\\' + open.val;\n        open.type = 'bracket.inner';\n        open.escaped = true;\n        return open;\n      }\n\n      var node = pos({\n        type: 'bracket',\n        nodes: [open]\n      });\n\n      define(node, 'parent', prev);\n      define(open, 'parent', node);\n      this.push('bracket', node);\n      prev.nodes.push(node);\n    })\n\n    /**\n     * Bracket text\n     */\n\n    .capture('bracket.inner', function() {\n      if (!this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(not);\n      if (!m || !m[0]) return;\n\n      var next = this.input.charAt(0);\n      var val = m[0];\n\n      var node = pos({\n        type: 'bracket.inner',\n        val: val\n      });\n\n      if (val === '\\\\\\\\') {\n        return node;\n      }\n\n      var first = val.charAt(0);\n      var last = val.slice(-1);\n\n      if (first === '!') {\n        val = '^' + val.slice(1);\n      }\n\n      if (last === '\\\\' || (val === '^' && next === ']')) {\n        val += this.input[0];\n        this.consume(1);\n      }\n\n      node.val = val;\n      return node;\n    })\n\n    /**\n     * Close: ']'\n     */\n\n    .capture('bracket.close', function() {\n      var parsed = this.parsed;\n      var pos = this.position();\n      var m = this.match(/^\\]/);\n      if (!m) return;\n\n      var prev = this.prev();\n      var last = utils.last(prev.nodes);\n\n      if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n        last.val = last.val.slice(0, last.val.length - 1);\n\n        return pos({\n          type: 'escape',\n          val: m[0]\n        });\n      }\n\n      var node = pos({\n        type: 'bracket.close',\n        rest: this.input,\n        val: m[0]\n      });\n\n      if (last.type === 'bracket.open') {\n        node.type = 'bracket.inner';\n        node.escaped = true;\n        return node;\n      }\n\n      var bracket = this.pop('bracket');\n      if (!this.isType(bracket, 'bracket')) {\n        if (this.options.strict) {\n          throw new Error('missing opening \"[\"');\n        }\n        node.type = 'bracket.inner';\n        node.escaped = true;\n        return node;\n      }\n\n      bracket.nodes.push(node);\n      define(node, 'parent', bracket);\n    });\n}\n\n/**\n * Brackets parsers\n */\n\nmodule.exports = parsers;\n\n/**\n * Expose text regex\n */\n\nmodule.exports.TEXT_REGEX = TEXT_REGEX;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}