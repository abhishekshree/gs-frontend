{"ast":null,"code":"import _slicedToArray from \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef, useState, useEffect } from 'react';\nfunction App() {\n  var mapElement = useRef();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var _useState3 = useState(80.222230),\n    _useState4 = _slicedToArray(_useState3, 2),\n    longitude = _useState4[0],\n    setLongitude = _useState4[1];\n  var _useState5 = useState(26.504960),\n    _useState6 = _slicedToArray(_useState5, 2),\n    latitude = _useState6[0],\n    setLatitude = _useState6[1];\n  var convertToPoints = function convertToPoints(lngLat) {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n  var addDeliveryMarker = function addDeliveryMarker(lngLat, map) {\n    var element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n  var drawRoute = function drawRoute(geoJson, map) {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n  useEffect(function () {\n    var origin = {\n      lng: longitude,\n      lat: latitude\n    };\n    var destinations = [];\n    var map = tt.map({\n      key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n    var addMarker = function addMarker() {\n      var element = document.createElement('div');\n      element.className = 'marker';\n      var marker = new tt.Marker({\n        element: element\n      }).setLngLat([longitude, latitude]).addTo(map);\n    };\n    addMarker();\n    var sortDestinations = function sortDestinations(locations) {\n      var pointsForDestinations = locations.map(function (destination) {\n        return convertToPoints(destination);\n      });\n      var callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)]\n      };\n      return new Promise(function (resolve, reject) {\n        ttapi.services.matrixRouting(callParameters).then(function (matrixAPIResults) {\n          var results = matrixAPIResults.matrix[0];\n          var resultsArray = results.map(function (result, index) {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds\n            };\n          });\n          resultsArray.sort(function (a, b) {\n            return a.drivingtime - b.drivingtime;\n          });\n          var sortedLocations = resultsArray.map(function (result) {\n            return result.location;\n          });\n          resolve(sortedLocations);\n        });\n      });\n    };\n    var recalculateRoutes = function recalculateRoutes() {\n      sortDestinations(destinations).then(function (sorted) {\n        sorted.unshift(origin);\n        ttapi.services.calculateRoute({\n          key: process.env.REACT_APP_TOM_TOM_API_KEY,\n          locations: sorted\n        }).then(function (routeData) {\n          var geoJson = routeData.toGeoJson();\n          drawRoute(geoJson, map);\n        });\n      });\n    };\n    return function () {\n      return map.remove();\n    };\n    // callParameters = {\n    //   key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n    //   destinations: pointsForDestinations,\n    //   origins: [convertToPoints(origin)],\n    // }\n    // return new Promise((resolve, reject) => {\n    // })\n  }, [longitude, latitude]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, \"GROW SIMPLEE\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    ref: mapElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","ttapi","tt","useRef","useState","useEffect","App","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","origin","destinations","key","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","marker","sortDestinations","locations","pointsForDestinations","destination","callParameters","process","env","REACT_APP_TOM_TOM_API_KEY","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","remove"],"sources":["/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef,useState,useEffect } from 'react';\n\n\nfunction App() {\n\n  const mapElement = useRef();\n\n  const [map, setMap] = useState({});\n\n  const [longitude, setLongitude] = useState(80.222230);\n  const [latitude, setLatitude] = useState(26.504960);\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    })\n    .setLngLat(lngLat)\n    .addTo(map)\n  }\n\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n  \n      }\n    })\n  }\n\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n\n    const destinations = []\n\n    let map = tt.map({\n      key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n\n    const addMarker = () => {\n      const element = document.createElement('div')\n      element.className = 'marker'\n      const marker = new tt.Marker({\n        element: element,\n      }).setLngLat([longitude,latitude])\n      .addTo(map)\n    }\n    addMarker();\n    \n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key: process.env.REACT_APP_TOM_TOM_API_KEY,\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key: process.env.REACT_APP_TOM_TOM_API_KEY,\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n\n    return () => map.remove()\n    // callParameters = {\n    //   key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n    //   destinations: pointsForDestinations,\n    //   origins: [convertToPoints(origin)],\n    // }\n    // return new Promise((resolve, reject) => {\n    // })\n\n  }, [longitude,latitude]);\n\n\n  return (\n    <div className=\"App\">\n      GROW SIMPLEE\n      <div className=\"map\" ref={mapElement}></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}