{"ast":null,"code":"/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\nvar isNumber = require('is-number');\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n    case 'error':\n      return val.message !== '';\n    case 'array':\n      var len = val.length;\n      if (len === 0) {\n        return false;\n      }\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n      return false;\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n    case 'object':\n      var keys = Object.keys(val);\n      if (keys.length === 0) {\n        return false;\n      }\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n      return false;\n    default:\n      {\n        return false;\n      }\n  }\n};","map":{"version":3,"names":["typeOf","require","isNumber","module","exports","hasValue","val","length","message","len","i","size","keys","Object","key"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/has-values/index.js"],"sourcesContent":["/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\nvar isNumber = require('is-number');\n\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n    case 'error':\n      return val.message !== '';\n    case 'array':\n      var len = val.length;\n      if (len === 0) {\n        return false;\n      }\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n      return false;\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n    case 'object':\n      var keys = Object.keys(val);\n      if (keys.length === 0) {\n        return false;\n      }\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n      return false;\n    default: {\n      return false;\n    }\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC/B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEnCE,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQ,CAACC,GAAG,EAAE;EACtC;EACA,IAAIJ,QAAQ,CAACI,GAAG,CAAC,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,QAAQN,MAAM,CAACM,GAAG,CAAC;IACjB,KAAK,MAAM;IACX,KAAK,SAAS;IACd,KAAK,UAAU;MACb,OAAO,IAAI;IACb,KAAK,QAAQ;IACb,KAAK,WAAW;MACd,OAAOA,GAAG,CAACC,MAAM,KAAK,CAAC;IACzB,KAAK,OAAO;MACV,OAAOD,GAAG,CAACE,OAAO,KAAK,EAAE;IAC3B,KAAK,OAAO;MACV,IAAIC,GAAG,GAAGH,GAAG,CAACC,MAAM;MACpB,IAAIE,GAAG,KAAK,CAAC,EAAE;QACb,OAAO,KAAK;MACd;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,EAAEC,CAAC,EAAE,EAAE;QAC5B,IAAIL,QAAQ,CAACC,GAAG,CAACI,CAAC,CAAC,CAAC,EAAE;UACpB,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd,KAAK,MAAM;IACX,KAAK,KAAK;IACV,KAAK,KAAK;MACR,OAAOJ,GAAG,CAACK,IAAI,KAAK,CAAC;IACvB,KAAK,QAAQ;MACX,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,GAAG,CAAC;MAC3B,IAAIM,IAAI,CAACL,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,KAAK;MACd;MACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAACL,MAAM,EAAEG,CAAC,EAAE,EAAE;QACpC,IAAII,GAAG,GAAGF,IAAI,CAACF,CAAC,CAAC;QACjB,IAAIL,QAAQ,CAACC,GAAG,CAACQ,GAAG,CAAC,CAAC,EAAE;UACtB,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd;MAAS;QACP,OAAO,KAAK;MACd;EAAC;AAEL,CAAC"},"metadata":{},"sourceType":"script"}