{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar MASK_MODE = parseInt('7777', 8);\nvar DEFAULT_DIR_MODE = parseInt('0777', 8);\nfunction mkdirp(dirpath, customMode, callback) {\n  if (typeof customMode === 'function') {\n    callback = customMode;\n    customMode = undefined;\n  }\n  var mode = customMode || DEFAULT_DIR_MODE & ~process.umask();\n  dirpath = path.resolve(dirpath);\n  fs.mkdir(dirpath, mode, onMkdir);\n  function onMkdir(mkdirErr) {\n    if (!mkdirErr) {\n      return fs.stat(dirpath, onStat);\n    }\n    switch (mkdirErr.code) {\n      case 'ENOENT':\n        {\n          return mkdirp(path.dirname(dirpath), onRecurse);\n        }\n      case 'EEXIST':\n        {\n          return fs.stat(dirpath, onStat);\n        }\n      default:\n        {\n          return callback(mkdirErr);\n        }\n    }\n    function onStat(statErr, stats) {\n      if (statErr) {\n        return callback(statErr);\n      }\n      if (!stats.isDirectory()) {\n        return callback(mkdirErr);\n      }\n\n      // TODO: Is it proper to mask like this?\n      if ((stats.mode & MASK_MODE) === mode) {\n        return callback();\n      }\n      if (!customMode) {\n        return callback();\n      }\n      fs.chmod(dirpath, mode, callback);\n    }\n  }\n  function onRecurse(recurseErr) {\n    if (recurseErr) {\n      return callback(recurseErr);\n    }\n    mkdirp(dirpath, mode, callback);\n  }\n}\nmodule.exports = mkdirp;","map":{"version":3,"names":["path","require","fs","MASK_MODE","parseInt","DEFAULT_DIR_MODE","mkdirp","dirpath","customMode","callback","undefined","mode","process","umask","resolve","mkdir","onMkdir","mkdirErr","stat","onStat","code","dirname","onRecurse","statErr","stats","isDirectory","chmod","recurseErr","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/fs-mkdirp-stream/mkdirp.js"],"sourcesContent":["'use strict';\n\nvar path = require('path');\n\nvar fs = require('graceful-fs');\n\nvar MASK_MODE = parseInt('7777', 8);\nvar DEFAULT_DIR_MODE = parseInt('0777', 8);\n\nfunction mkdirp(dirpath, customMode, callback) {\n  if (typeof customMode === 'function') {\n    callback = customMode;\n    customMode = undefined;\n  }\n\n  var mode = customMode || (DEFAULT_DIR_MODE & ~process.umask());\n  dirpath = path.resolve(dirpath);\n\n  fs.mkdir(dirpath, mode, onMkdir);\n\n  function onMkdir(mkdirErr) {\n    if (!mkdirErr) {\n      return fs.stat(dirpath, onStat);\n    }\n\n    switch (mkdirErr.code) {\n      case 'ENOENT': {\n        return mkdirp(path.dirname(dirpath), onRecurse);\n      }\n\n      case 'EEXIST': {\n        return fs.stat(dirpath, onStat);\n      }\n\n      default: {\n        return callback(mkdirErr);\n      }\n    }\n\n    function onStat(statErr, stats) {\n      if (statErr) {\n        return callback(statErr);\n      }\n\n      if (!stats.isDirectory()) {\n        return callback(mkdirErr);\n      }\n\n      // TODO: Is it proper to mask like this?\n      if ((stats.mode & MASK_MODE) === mode) {\n        return callback();\n      }\n\n      if (!customMode) {\n        return callback();\n      }\n\n      fs.chmod(dirpath, mode, callback);\n    }\n  }\n\n  function onRecurse(recurseErr) {\n    if (recurseErr) {\n      return callback(recurseErr);\n    }\n\n    mkdirp(dirpath, mode, callback);\n  }\n}\n\nmodule.exports = mkdirp;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAa,CAAC;AAE/B,IAAIE,SAAS,GAAGC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AACnC,IAAIC,gBAAgB,GAAGD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AAE1C,SAASE,MAAM,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EAC7C,IAAI,OAAOD,UAAU,KAAK,UAAU,EAAE;IACpCC,QAAQ,GAAGD,UAAU;IACrBA,UAAU,GAAGE,SAAS;EACxB;EAEA,IAAIC,IAAI,GAAGH,UAAU,IAAKH,gBAAgB,GAAG,CAACO,OAAO,CAACC,KAAK,EAAG;EAC9DN,OAAO,GAAGP,IAAI,CAACc,OAAO,CAACP,OAAO,CAAC;EAE/BL,EAAE,CAACa,KAAK,CAACR,OAAO,EAAEI,IAAI,EAAEK,OAAO,CAAC;EAEhC,SAASA,OAAO,CAACC,QAAQ,EAAE;IACzB,IAAI,CAACA,QAAQ,EAAE;MACb,OAAOf,EAAE,CAACgB,IAAI,CAACX,OAAO,EAAEY,MAAM,CAAC;IACjC;IAEA,QAAQF,QAAQ,CAACG,IAAI;MACnB,KAAK,QAAQ;QAAE;UACb,OAAOd,MAAM,CAACN,IAAI,CAACqB,OAAO,CAACd,OAAO,CAAC,EAAEe,SAAS,CAAC;QACjD;MAEA,KAAK,QAAQ;QAAE;UACb,OAAOpB,EAAE,CAACgB,IAAI,CAACX,OAAO,EAAEY,MAAM,CAAC;QACjC;MAEA;QAAS;UACP,OAAOV,QAAQ,CAACQ,QAAQ,CAAC;QAC3B;IAAC;IAGH,SAASE,MAAM,CAACI,OAAO,EAAEC,KAAK,EAAE;MAC9B,IAAID,OAAO,EAAE;QACX,OAAOd,QAAQ,CAACc,OAAO,CAAC;MAC1B;MAEA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,EAAE;QACxB,OAAOhB,QAAQ,CAACQ,QAAQ,CAAC;MAC3B;;MAEA;MACA,IAAI,CAACO,KAAK,CAACb,IAAI,GAAGR,SAAS,MAAMQ,IAAI,EAAE;QACrC,OAAOF,QAAQ,EAAE;MACnB;MAEA,IAAI,CAACD,UAAU,EAAE;QACf,OAAOC,QAAQ,EAAE;MACnB;MAEAP,EAAE,CAACwB,KAAK,CAACnB,OAAO,EAAEI,IAAI,EAAEF,QAAQ,CAAC;IACnC;EACF;EAEA,SAASa,SAAS,CAACK,UAAU,EAAE;IAC7B,IAAIA,UAAU,EAAE;MACd,OAAOlB,QAAQ,CAACkB,UAAU,CAAC;IAC7B;IAEArB,MAAM,CAACC,OAAO,EAAEI,IAAI,EAAEF,QAAQ,CAAC;EACjC;AACF;AAEAmB,MAAM,CAACC,OAAO,GAAGvB,MAAM"},"metadata":{},"sourceType":"script"}