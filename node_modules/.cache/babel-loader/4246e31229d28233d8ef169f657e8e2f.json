{"ast":null,"code":"import _slicedToArray from \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css';\nimport * as ttapi from '@tomtom-international/web-sdk-services';\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef, useState, useEffect } from 'react';\n// import { destinations } from './constants';\n\nfunction App() {\n  var mapElement = useRef();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var _useState3 = useState(77.5747463),\n    _useState4 = _slicedToArray(_useState3, 2),\n    longitude = _useState4[0],\n    setLongitude = _useState4[1];\n  var _useState5 = useState(12.9140182),\n    _useState6 = _slicedToArray(_useState5, 2),\n    latitude = _useState6[0],\n    setLatitude = _useState6[1];\n  var convertToPoints = function convertToPoints(lngLat) {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    };\n  };\n  var addDeliveryMarker = function addDeliveryMarker(lngLat, map) {\n    var element = document.createElement('div');\n    element.className = 'marker-delivery';\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map);\n  };\n  var drawRoute = function drawRoute(geoJson, map) {\n    if (map.getLayer('route')) {\n      map.removeLayer('route');\n      map.removeSource('route');\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    });\n  };\n  var destinations = [{\n    'lng': 12.9140182,\n    'lat': 77.5747463\n  }, {\n    'lng': 12.9414398,\n    'lat': 77.5454111\n  }, {\n    'lng': 12.91593975,\n    'lat': 77.5858407\n  }, {\n    'lng': 12.9414398,\n    'lat': 77.5454111\n  }, {\n    'lng': 12.8818289,\n    'lat': 77.5728281\n  }, {\n    'lng': 12.89823678,\n    'lat': 77.58827011\n  }, {\n    'lng': 12.913448,\n    'lat': 77.5855807\n  }, {\n    'lng': 12.90446756,\n    'lat': 77.58577882\n  }, {\n    'lng': 12.9041223,\n    'lat': 77.5763403\n  }, {\n    'lng': 12.9014401,\n    'lat': 77.5971799\n  }, {\n    'lng': 12.90869,\n    'lat': 77.5982671\n  }, {\n    'lng': 12.882197,\n    'lat': 77.5794586\n  }, {\n    'lng': 12.9065333,\n    'lat': 77.5928915\n  }, {\n    'lng': 12.96648166,\n    'lat': 77.52554887\n  }, {\n    'lng': 12.8991624,\n    'lat': 77.5758771\n  }, {\n    'lng': 13.04341724,\n    'lat': 77.55239706\n  }, {\n    'lng': 12.9038293,\n    'lat': 77.5749035\n  }, {\n    'lng': 12.91189514,\n    'lat': 77.5857369\n  }, {\n    'lng': 12.90869,\n    'lat': 77.5982671\n  }, {\n    'lng': 12.8823078,\n    'lat': 77.5721041\n  }, {\n    'lng': 12.8787886,\n    'lat': 77.5678268\n  }, {\n    'lng': 12.9218465,\n    'lat': 77.5402858\n  }, {\n    'lng': 12.8674972,\n    'lat': 77.5846438\n  }, {\n    'lng': 12.9047869,\n    'lat': 77.5729311\n  }, {\n    'lng': 12.87844845,\n    'lat': 77.56911885\n  }, {\n    'lng': 12.8993847,\n    'lat': 77.5886953\n  }, {\n    'lng': 12.9060847,\n    'lat': 77.5913386\n  }, {\n    'lng': 12.8826489,\n    'lat': 77.5802928\n  }, {\n    'lng': 12.90609741,\n    'lat': 77.58045197\n  }, {\n    'lng': 12.89823992,\n    'lat': 77.58830555\n  }, {\n    'lng': 12.97674656,\n    'lat': 77.57527924\n  }, {\n    'lng': 12.89155,\n    'lat': 77.5778559\n  }, {\n    'lng': 12.9060672,\n    'lat': 77.5923878\n  }, {\n    'lng': 12.9058275,\n    'lat': 77.60822545\n  }, {\n    'lng': 12.9128212,\n    'lat': 77.5855952\n  }, {\n    'lng': 12.9128212,\n    'lat': 77.5855952\n  }, {\n    'lng': 12.8927062,\n    'lat': 77.5816906\n  }, {\n    'lng': 12.892762,\n    'lat': 77.58566\n  }, {\n    'lng': 12.8927062,\n    'lat': 77.5816906\n  }, {\n    'lng': 12.9126958,\n    'lat': 77.5859525\n  }, {\n    'lng': 12.89807825,\n    'lat': 77.58592415\n  }, {\n    'lng': 12.91117407,\n    'lat': 77.59560111\n  }, {\n    'lng': 12.89807825,\n    'lat': 77.58592415\n  }, {\n    'lng': 12.90115693,\n    'lat': 77.59086931\n  }, {\n    'lng': 12.9128212,\n    'lat': 77.5855952\n  }, {\n    'lng': 12.892762,\n    'lat': 77.58566\n  }, {\n    'lng': 12.90451855,\n    'lat': 77.58577832\n  }, {\n    'lng': 12.89823631,\n    'lat': 77.5882648\n  }, {\n    'lng': 12.89212245,\n    'lat': 77.5811562\n  }, {\n    'lng': 12.9192848,\n    'lat': 77.6482415\n  }, {\n    'lng': 12.9311856,\n    'lat': 77.60688965\n  }, {\n    'lng': 12.921276,\n    'lat': 77.6452718\n  }, {\n    'lng': 12.9197487,\n    'lat': 77.65428584\n  }, {\n    'lng': 12.9116544,\n    'lat': 77.65182375\n  }, {\n    'lng': 12.912096,\n    'lat': 77.649658\n  }, {\n    'lng': 12.9138247,\n    'lat': 77.6648178\n  }, {\n    'lng': 12.9208574,\n    'lat': 77.6514836\n  }, {\n    'lng': 12.9208574,\n    'lat': 77.6514836\n  }, {\n    'lng': 12.9121594,\n    'lat': 77.6516733\n  }, {\n    'lng': 12.919489,\n    'lat': 77.6488143\n  }, {\n    'lng': 12.921276,\n    'lat': 77.6452718\n  }, {\n    'lng': 12.9125749,\n    'lat': 77.6524528\n  }, {\n    'lng': 12.91920825,\n    'lat': 77.64923117\n  }, {\n    'lng': 12.9081571,\n    'lat': 77.6107641\n  }, {\n    'lng': 12.9196824,\n    'lat': 77.6514033\n  }, {\n    'lng': 12.9159968,\n    'lat': 77.6510735\n  }, {\n    'lng': 12.91073607,\n    'lat': 77.65346365\n  }, {\n    'lng': 12.9173204,\n    'lat': 77.644636\n  }, {\n    'lng': 12.9116082,\n    'lat': 77.6301982\n  }, {\n    'lng': 12.9057972,\n    'lat': 77.647075\n  }, {\n    'lng': 12.97842535,\n    'lat': 77.6408173\n  }, {\n    'lng': 12.9199064,\n    'lat': 77.6466365\n  }, {\n    'lng': 12.91852978,\n    'lat': 77.65170415\n  }, {\n    'lng': 12.9156333,\n    'lat': 77.6516664\n  }, {\n    'lng': 12.91805831,\n    'lat': 77.64172244\n  }, {\n    'lng': 12.91283335,\n    'lat': 77.65180485\n  }, {\n    'lng': 12.9127747,\n    'lat': 77.651679\n  }, {\n    'lng': 12.9088497,\n    'lat': 77.6521656\n  }, {\n    'lng': 12.9057891,\n    'lat': 77.646318\n  }, {\n    'lng': 12.9125749,\n    'lat': 77.6524528\n  }, {\n    'lng': 12.9125749,\n    'lat': 77.6524528\n  }, {\n    'lng': 12.97674656,\n    'lat': 77.57527924\n  }, {\n    'lng': 12.9208574,\n    'lat': 77.6514836\n  }, {\n    'lng': 12.9208574,\n    'lat': 77.6514836\n  }, {\n    'lng': 12.97674656,\n    'lat': 77.57527924\n  }, {\n    'lng': 12.912786,\n    'lat': 77.6520296\n  }, {\n    'lng': 12.9162835,\n    'lat': 77.6519083\n  }, {\n    'lng': 12.9160461,\n    'lat': 77.6518627\n  }, {\n    'lng': 12.90357815,\n    'lat': 77.6497449\n  }, {\n    'lng': 12.91198415,\n    'lat': 77.65181775\n  }, {\n    'lng': 12.9150377,\n    'lat': 77.6516891\n  }, {\n    'lng': 12.921276,\n    'lat': 77.6452718\n  }, {\n    'lng': 12.9187861,\n    'lat': 77.6447156\n  }, {\n    'lng': 12.91243615,\n    'lat': 77.6482887\n  }, {\n    'lng': 12.91348818,\n    'lat': 77.65179603\n  }, {\n    'lng': 12.92209173,\n    'lat': 77.64497995\n  }, {\n    'lng': 12.9034033,\n    'lat': 77.65050232\n  }, {\n    'lng': 12.9127747,\n    'lat': 77.651679\n  }, {\n    'lng': 12.920735,\n    'lat': 77.612839\n  }, {\n    'lng': 12.91203135,\n    'lat': 77.52230265\n  }, {\n    'lng': 13.0209502,\n    'lat': 77.657583\n  }, {\n    'lng': 13.0209502,\n    'lat': 77.657583\n  }, {\n    'lng': 12.9766843,\n    'lat': 77.6004729\n  }, {\n    'lng': 12.975842,\n    'lat': 77.601919\n  }, {\n    'lng': 12.970087,\n    'lat': 77.562872\n  }, {\n    'lng': 12.96920427,\n    'lat': 77.56182187\n  }, {\n    'lng': 12.9754849,\n    'lat': 77.65268314\n  }, {\n    'lng': 12.9755591,\n    'lat': 77.6025789\n  }, {\n    'lng': 12.9730696,\n    'lat': 77.60322295\n  }, {\n    'lng': 12.9757802,\n    'lat': 77.6021117\n  }, {\n    'lng': 12.9753356,\n    'lat': 77.6039292\n  }, {\n    'lng': 12.97344699,\n    'lat': 77.65234347\n  }, {\n    'lng': 12.98823835,\n    'lat': 77.56899912\n  }, {\n    'lng': 12.9604024,\n    'lat': 77.63714295\n  }, {\n    'lng': 12.978474,\n    'lat': 77.633046\n  }, {\n    'lng': 12.97010994,\n    'lat': 77.64472198\n  }, {\n    'lng': 12.9803865,\n    'lat': 77.6365058\n  }, {\n    'lng': 12.96565533,\n    'lat': 77.62571716\n  }, {\n    'lng': 12.9755591,\n    'lat': 77.6025789\n  }, {\n    'lng': 12.9821938,\n    'lat': 77.6390282\n  }, {\n    'lng': 12.9703414,\n    'lat': 77.63871966\n  }, {\n    'lng': 12.97026205,\n    'lat': 77.64117865\n  }, {\n    'lng': 12.95639005,\n    'lat': 77.64136085\n  }, {\n    'lng': 12.97203539,\n    'lat': 77.64062428\n  }, {\n    'lng': 12.97416409,\n    'lat': 77.63979617\n  }, {\n    'lng': 12.96004485,\n    'lat': 77.63637575\n  }, {\n    'lng': 13.025153,\n    'lat': 77.6108274\n  }, {\n    'lng': 12.977646,\n    'lat': 77.636375\n  }, {\n    'lng': 12.9753356,\n    'lat': 77.6039292\n  }, {\n    'lng': 12.962004,\n    'lat': 77.613012\n  }, {\n    'lng': 12.97416409,\n    'lat': 77.63979617\n  }, {\n    'lng': 13.02019706,\n    'lat': 77.65862938\n  }, {\n    'lng': 12.97244458,\n    'lat': 77.63629701\n  }, {\n    'lng': 12.958343,\n    'lat': 77.63902789\n  }, {\n    'lng': 12.9702138,\n    'lat': 77.6412957\n  }, {\n    'lng': 12.974946,\n    'lat': 77.6038223\n  }, {\n    'lng': 12.97931563,\n    'lat': 77.63687205\n  }, {\n    'lng': 12.98218585,\n    'lat': 77.64134704\n  }, {\n    'lng': 12.970251,\n    'lat': 77.639137\n  }, {\n    'lng': 12.97244458,\n    'lat': 77.63629701\n  }, {\n    'lng': 12.9714965,\n    'lat': 77.6348876\n  }, {\n    'lng': 12.97016504,\n    'lat': 77.64090261\n  }, {\n    'lng': 12.97787971,\n    'lat': 77.63661025\n  }, {\n    'lng': 12.962004,\n    'lat': 77.613012\n  }, {\n    'lng': 12.9755591,\n    'lat': 77.6025789\n  }, {\n    'lng': 12.9755847,\n    'lat': 77.6328975\n  }, {\n    'lng': 12.970251,\n    'lat': 77.639137\n  }, {\n    'lng': 13.025153,\n    'lat': 77.6108274\n  }, {\n    'lng': 12.963287,\n    'lat': 77.647364\n  }, {\n    'lng': 13.0192906,\n    'lat': 77.7055166\n  }, {\n    'lng': 13.00451465,\n    'lat': 77.71287832\n  }, {\n    'lng': 13.00427355,\n    'lat': 77.70964585\n  }, {\n    'lng': 13.00456163,\n    'lat': 77.71317899\n  }, {\n    'lng': 13.00456546,\n    'lat': 77.71448138\n  }, {\n    'lng': 13.013405,\n    'lat': 77.6956903\n  }, {\n    'lng': 12.963287,\n    'lat': 77.647364\n  }, {\n    'lng': 13.00438055,\n    'lat': 77.71195445\n  }, {\n    'lng': 13.00984506,\n    'lat': 77.70903569\n  }, {\n    'lng': 13.00438055,\n    'lat': 77.71195445\n  }, {\n    'lng': 13.0152717,\n    'lat': 77.6960537\n  }, {\n    'lng': 12.963287,\n    'lat': 77.647364\n  }, {\n    'lng': 13.00456546,\n    'lat': 77.71448138\n  }, {\n    'lng': 13.00438055,\n    'lat': 77.71195445\n  }, {\n    'lng': 12.963287,\n    'lat': 77.647364\n  }, {\n    'lng': 13.0152717,\n    'lat': 77.6960537\n  }, {\n    'lng': 13.00438055,\n    'lat': 77.71195445\n  }, {\n    'lng': 12.90327475,\n    'lat': 77.60385965\n  }, {\n    'lng': 12.90327475,\n    'lat': 77.60385965\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.95109887,\n    'lat': 77.69977544\n  }, {\n    'lng': 12.9460849,\n    'lat': 77.69840035\n  }, {\n    'lng': 12.94620899,\n    'lat': 77.6984433\n  }, {\n    'lng': 12.959869,\n    'lat': 77.7013341\n  }, {\n    'lng': 12.96098982,\n    'lat': 77.70144787\n  }, {\n    'lng': 12.95222969,\n    'lat': 77.69999176\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.95084884,\n    'lat': 77.69784179\n  }, {\n    'lng': 12.95877995,\n    'lat': 77.70117934\n  }, {\n    'lng': 12.95016386,\n    'lat': 77.6995019\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.937305,\n    'lat': 77.70144\n  }, {\n    'lng': 12.96383172,\n    'lat': 77.53423874\n  }, {\n    'lng': 12.9481475,\n    'lat': 77.6988578\n  }, {\n    'lng': 12.93940761,\n    'lat': 77.69534615\n  }, {\n    'lng': 12.93940761,\n    'lat': 77.69534615\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.94900214,\n    'lat': 77.68707968\n  }, {\n    'lng': 12.95010705,\n    'lat': 77.70020935\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.96391437,\n    'lat': 77.70188065\n  }, {\n    'lng': 12.95676725,\n    'lat': 77.70119195\n  }, {\n    'lng': 12.9501325,\n    'lat': 77.69961132\n  }, {\n    'lng': 12.93417425,\n    'lat': 77.70070144\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.9629269,\n    'lat': 77.71208295\n  }, {\n    'lng': 12.95191435,\n    'lat': 77.6998021\n  }, {\n    'lng': 12.95010705,\n    'lat': 77.70020935\n  }, {\n    'lng': 12.95105552,\n    'lat': 77.69964779\n  }, {\n    'lng': 12.94611885,\n    'lat': 77.6986075\n  }, {\n    'lng': 12.94611885,\n    'lat': 77.6986075\n  }, {\n    'lng': 12.9490441,\n    'lat': 77.6877523\n  }, {\n    'lng': 12.9460849,\n    'lat': 77.69840035\n  }, {\n    'lng': 12.96391437,\n    'lat': 77.70188065\n  }, {\n    'lng': 12.9380185,\n    'lat': 77.69915494\n  }, {\n    'lng': 12.93452056,\n    'lat': 77.70111079\n  }, {\n    'lng': 12.939614,\n    'lat': 77.690648\n  }, {\n    'lng': 12.949468,\n    'lat': 77.695959\n  }, {\n    'lng': 12.93873545,\n    'lat': 77.69559842\n  }, {\n    'lng': 12.93922655,\n    'lat': 77.69578445\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.95452595,\n    'lat': 77.70270538\n  }, {\n    'lng': 12.93922655,\n    'lat': 77.69578445\n  }, {\n    'lng': 12.9565074,\n    'lat': 77.7046659\n  }];\n  useEffect(function () {\n    var origin = {\n      lng: longitude,\n      lat: latitude\n    };\n    var map = tt.map({\n      key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n    var addMarker = function addMarker() {\n      var element = document.createElement('div');\n      element.className = 'marker';\n      var marker = new tt.Marker({\n        element: element\n      }).setLngLat([longitude, latitude]).addTo(map);\n    };\n    addMarker();\n    var sortDestinations = function sortDestinations(locations) {\n      var pointsForDestinations = locations.map(function (destination) {\n        return convertToPoints(destination);\n      });\n      var callParameters = {\n        key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)]\n      };\n      return new Promise(function (resolve, reject) {\n        ttapi.services.matrixRouting(callParameters).then(function (matrixAPIResults) {\n          var results = matrixAPIResults.matrix[0];\n          var resultsArray = results.map(function (result, index) {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds\n            };\n          });\n          resultsArray.sort(function (a, b) {\n            return a.drivingtime - b.drivingtime;\n          });\n          var sortedLocations = resultsArray.map(function (result) {\n            return result.location;\n          });\n          resolve(sortedLocations);\n        });\n      });\n    };\n    var recalculateRoutes = function recalculateRoutes() {\n      sortDestinations(destinations).then(function (sorted) {\n        sorted.unshift(origin);\n        ttapi.services.calculateRoute({\n          key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n          locations: sorted\n        }).then(function (routeData) {\n          var geoJson = routeData.toGeoJson();\n          console.log(geoJson);\n          drawRoute(geoJson, map);\n        });\n      });\n    };\n    for (var d in destinations) {\n      console.log(destinations[d]);\n      addDeliveryMarker(destinations[d], map);\n    }\n    recalculateRoutes();\n    map.on('click', function (e) {\n      destinations.push(e.lngLat);\n      console.log(e.lngLat);\n      addDeliveryMarker(e.lngLat, map);\n      recalculateRoutes();\n    });\n    return function () {\n      return map.remove();\n    };\n    // callParameters = {\n    //   key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n    //   destinations: pointsForDestinations,\n    //   origins: [convertToPoints(origin)],\n    // }\n    // return new Promise((resolve, reject) => {\n    // })\n  }, [longitude, latitude]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, \"GROW SIMPLEE\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    ref: mapElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","ttapi","tt","useRef","useState","useEffect","App","mapElement","map","setMap","longitude","setLongitude","latitude","setLatitude","convertToPoints","lngLat","point","lat","lng","addDeliveryMarker","element","document","createElement","className","Marker","setLngLat","addTo","drawRoute","geoJson","getLayer","removeLayer","removeSource","addLayer","id","type","source","data","paint","destinations","origin","key","container","current","stylesVisibility","trafficIncidents","trafficFlow","center","zoom","addMarker","marker","sortDestinations","locations","pointsForDestinations","destination","callParameters","origins","Promise","resolve","reject","services","matrixRouting","then","matrixAPIResults","results","matrix","resultsArray","result","index","location","drivingtime","response","routeSummary","travelTimeInSeconds","sort","a","b","sortedLocations","recalculateRoutes","sorted","unshift","calculateRoute","routeData","toGeoJson","console","log","d","on","e","push","remove"],"sources":["/home/krishnansh/Documents/WebDev/PS/tom-tom-app/src/App.js"],"sourcesContent":["import React from 'react'\nimport './App.css';\nimport '@tomtom-international/web-sdk-maps/dist/maps.css'\nimport * as ttapi from '@tomtom-international/web-sdk-services'\nimport * as tt from '@tomtom-international/web-sdk-maps';\nimport { useRef,useState,useEffect } from 'react';\n// import { destinations } from './constants';\n\nfunction App() {\n\n  const mapElement = useRef();\n\n  const [map, setMap] = useState({});\n\n  const [longitude, setLongitude] = useState(77.5747463);\n  const [latitude, setLatitude] = useState(12.9140182);\n\n  const convertToPoints = (lngLat) => {\n    return {\n      point: {\n        latitude: lngLat.lat,\n        longitude: lngLat.lng\n      }\n    }\n  }\n\n  const addDeliveryMarker = (lngLat, map) => {\n    const element = document.createElement('div')\n    element.className = 'marker-delivery'\n    new tt.Marker({\n      element: element\n    }).setLngLat(lngLat).addTo(map)\n  }\n\n\n  const drawRoute = (geoJson, map) => {\n    if (map.getLayer('route')) {\n      map.removeLayer('route')\n      map.removeSource('route')\n    }\n    map.addLayer({\n      id: 'route',\n      type: 'line',\n      source: {\n        type: 'geojson',\n        data: geoJson\n      },\n      paint: {\n        'line-color': '#4a90e2',\n        'line-width': 6\n      }\n    })\n  }\n\n  const destinations = [{'lng': 12.9140182, 'lat': 77.5747463}, {'lng': 12.9414398, 'lat': 77.5454111}, {'lng': 12.91593975, 'lat': 77.5858407}, {'lng': 12.9414398, 'lat': 77.5454111}, {'lng': 12.8818289, 'lat': 77.5728281}, {'lng': 12.89823678, 'lat': 77.58827011}, {'lng': 12.913448, 'lat': 77.5855807}, {'lng': 12.90446756, 'lat': 77.58577882}, {'lng': 12.9041223, 'lat': 77.5763403}, {'lng': 12.9014401, 'lat': 77.5971799}, {'lng': 12.90869, 'lat': 77.5982671}, {'lng': 12.882197, 'lat': 77.5794586}, {'lng': 12.9065333, 'lat': 77.5928915}, {'lng': 12.96648166, 'lat': 77.52554887}, {'lng': 12.8991624, 'lat': 77.5758771}, {'lng': 13.04341724, 'lat': 77.55239706}, {'lng': 12.9038293, 'lat': 77.5749035}, {'lng': 12.91189514, 'lat': 77.5857369}, {'lng': 12.90869, 'lat': 77.5982671}, {'lng': 12.8823078, 'lat': 77.5721041}, {'lng': 12.8787886, 'lat': 77.5678268}, {'lng': 12.9218465, 'lat': 77.5402858}, {'lng': 12.8674972, 'lat': 77.5846438}, {'lng': 12.9047869, 'lat': 77.5729311}, {'lng': 12.87844845, 'lat': 77.56911885}, {'lng': 12.8993847, 'lat': 77.5886953}, {'lng': 12.9060847, 'lat': 77.5913386}, {'lng': 12.8826489, 'lat': 77.5802928}, {'lng': 12.90609741, 'lat': 77.58045197}, {'lng': 12.89823992, 'lat': 77.58830555}, {'lng': 12.97674656, 'lat': 77.57527924}, {'lng': 12.89155, 'lat': 77.5778559}, {'lng': 12.9060672, 'lat': 77.5923878}, {'lng': 12.9058275, 'lat': 77.60822545}, {'lng': 12.9128212, 'lat': 77.5855952}, {'lng': 12.9128212, 'lat': 77.5855952}, {'lng': 12.8927062, 'lat': 77.5816906}, {'lng': 12.892762, 'lat': 77.58566}, {'lng': 12.8927062, 'lat': 77.5816906}, {'lng': 12.9126958, 'lat': 77.5859525}, {'lng': 12.89807825, 'lat': 77.58592415}, {'lng': 12.91117407, 'lat': 77.59560111}, {'lng': 12.89807825, 'lat': 77.58592415}, {'lng': 12.90115693, 'lat': 77.59086931}, {'lng': 12.9128212, 'lat': 77.5855952}, {'lng': 12.892762, 'lat': 77.58566}, {'lng': 12.90451855, 'lat': 77.58577832}, {'lng': 12.89823631, 'lat': 77.5882648}, {'lng': 12.89212245, 'lat': 77.5811562}, {'lng': 12.9192848, 'lat': 77.6482415}, {'lng': 12.9311856, 'lat': 77.60688965}, {'lng': 12.921276, 'lat': 77.6452718}, {'lng': 12.9197487, 'lat': 77.65428584}, {'lng': 12.9116544, 'lat': 77.65182375}, {'lng': 12.912096, 'lat': 77.649658}, {'lng': 12.9138247, 'lat': 77.6648178}, {'lng': 12.9208574, 'lat': 77.6514836}, {'lng': 12.9208574, 'lat': 77.6514836}, {'lng': 12.9121594, 'lat': 77.6516733}, {'lng': 12.919489, 'lat': 77.6488143}, {'lng': 12.921276, 'lat': 77.6452718}, {'lng': 12.9125749, 'lat': 77.6524528}, {'lng': 12.91920825, 'lat': 77.64923117}, {'lng': 12.9081571, 'lat': 77.6107641}, {'lng': 12.9196824, 'lat': 77.6514033}, {'lng': 12.9159968, 'lat': 77.6510735}, {'lng': 12.91073607, 'lat': 77.65346365}, {'lng': 12.9173204, 'lat': 77.644636}, {'lng': 12.9116082, 'lat': 77.6301982}, {'lng': 12.9057972, 'lat': 77.647075}, {'lng': 12.97842535, 'lat': 77.6408173}, {'lng': 12.9199064, 'lat': 77.6466365}, {'lng': 12.91852978, 'lat': 77.65170415}, {'lng': 12.9156333, 'lat': 77.6516664}, {'lng': 12.91805831, 'lat': 77.64172244}, {'lng': 12.91283335, 'lat': 77.65180485}, {'lng': 12.9127747, 'lat': 77.651679}, {'lng': 12.9088497, 'lat': 77.6521656}, {'lng': 12.9057891, 'lat': 77.646318}, {'lng': 12.9125749, 'lat': 77.6524528}, {'lng': 12.9125749, 'lat': 77.6524528}, {'lng': 12.97674656, 'lat': 77.57527924}, {'lng': 12.9208574, 'lat': 77.6514836}, {'lng': 12.9208574, 'lat': 77.6514836}, {'lng': 12.97674656, 'lat': 77.57527924}, {'lng': 12.912786, 'lat': 77.6520296}, {'lng': 12.9162835, 'lat': 77.6519083}, {'lng': 12.9160461, 'lat': 77.6518627}, {'lng': 12.90357815, 'lat': 77.6497449}, {'lng': 12.91198415, 'lat': 77.65181775}, {'lng': 12.9150377, 'lat': 77.6516891}, {'lng': 12.921276, 'lat': 77.6452718}, {'lng': 12.9187861, 'lat': 77.6447156}, {'lng': 12.91243615, 'lat': 77.6482887}, {'lng': 12.91348818, 'lat': 77.65179603}, {'lng': 12.92209173, 'lat': 77.64497995}, {'lng': 12.9034033, 'lat': 77.65050232}, {'lng': 12.9127747, 'lat': 77.651679}, {'lng': 12.920735, 'lat': 77.612839}, {'lng': 12.91203135, 'lat': 77.52230265}, {'lng': 13.0209502, 'lat': 77.657583}, {'lng': 13.0209502, 'lat': 77.657583}, {'lng': 12.9766843, 'lat': 77.6004729}, {'lng': 12.975842, 'lat': 77.601919}, {'lng': 12.970087, 'lat': 77.562872}, {'lng': 12.96920427, 'lat': 77.56182187}, {'lng': 12.9754849, 'lat': 77.65268314}, {'lng': 12.9755591, 'lat': 77.6025789}, {'lng': 12.9730696, 'lat': 77.60322295}, {'lng': 12.9757802, 'lat': 77.6021117}, {'lng': 12.9753356, 'lat': 77.6039292}, {'lng': 12.97344699, 'lat': 77.65234347}, {'lng': 12.98823835, 'lat': 77.56899912}, {'lng': 12.9604024, 'lat': 77.63714295}, {'lng': 12.978474, 'lat': 77.633046}, {'lng': 12.97010994, 'lat': 77.64472198}, {'lng': 12.9803865, 'lat': 77.6365058}, {'lng': 12.96565533, 'lat': 77.62571716}, {'lng': 12.9755591, 'lat': 77.6025789}, {'lng': 12.9821938, 'lat': 77.6390282}, {'lng': 12.9703414, 'lat': 77.63871966}, {'lng': 12.97026205, 'lat': 77.64117865}, {'lng': 12.95639005, 'lat': 77.64136085}, {'lng': 12.97203539, 'lat': 77.64062428}, {'lng': 12.97416409, 'lat': 77.63979617}, {'lng': 12.96004485, 'lat': 77.63637575}, {'lng': 13.025153, 'lat': 77.6108274}, {'lng': 12.977646, 'lat': 77.636375}, {'lng': 12.9753356, 'lat': 77.6039292}, {'lng': 12.962004, 'lat': 77.613012}, {'lng': 12.97416409, 'lat': 77.63979617}, {'lng': 13.02019706, 'lat': 77.65862938}, {'lng': 12.97244458, 'lat': 77.63629701}, {'lng': 12.958343, 'lat': 77.63902789}, {'lng': 12.9702138, 'lat': 77.6412957}, {'lng': 12.974946, 'lat': 77.6038223}, {'lng': 12.97931563, 'lat': 77.63687205}, {'lng': 12.98218585, 'lat': 77.64134704}, {'lng': 12.970251, 'lat': 77.639137}, {'lng': 12.97244458, 'lat': 77.63629701}, {'lng': 12.9714965, 'lat': 77.6348876}, {'lng': 12.97016504, 'lat': 77.64090261}, {'lng': 12.97787971, 'lat': 77.63661025}, {'lng': 12.962004, 'lat': 77.613012}, {'lng': 12.9755591, 'lat': 77.6025789}, {'lng': 12.9755847, 'lat': 77.6328975}, {'lng': 12.970251, 'lat': 77.639137}, {'lng': 13.025153, 'lat': 77.6108274}, {'lng': 12.963287, 'lat': 77.647364}, {'lng': 13.0192906, 'lat': 77.7055166}, {'lng': 13.00451465, 'lat': 77.71287832}, {'lng': 13.00427355, 'lat': 77.70964585}, {'lng': 13.00456163, 'lat': 77.71317899}, {'lng': 13.00456546, 'lat': 77.71448138}, {'lng': 13.013405, 'lat': 77.6956903}, {'lng': 12.963287, 'lat': 77.647364}, {'lng': 13.00438055, 'lat': 77.71195445}, {'lng': 13.00984506, 'lat': 77.70903569}, {'lng': 13.00438055, 'lat': 77.71195445}, {'lng': 13.0152717, 'lat': 77.6960537}, {'lng': 12.963287, 'lat': 77.647364}, {'lng': 13.00456546, 'lat': 77.71448138}, {'lng': 13.00438055, 'lat': 77.71195445}, {'lng': 12.963287, 'lat': 77.647364}, {'lng': 13.0152717, 'lat': 77.6960537}, {'lng': 13.00438055, 'lat': 77.71195445}, {'lng': 12.90327475, 'lat': 77.60385965}, {'lng': 12.90327475, 'lat': 77.60385965}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.95109887, 'lat': 77.69977544}, {'lng': 12.9460849, 'lat': 77.69840035}, {'lng': 12.94620899, 'lat': 77.6984433}, {'lng': 12.959869, 'lat': 77.7013341}, {'lng': 12.96098982, 'lat': 77.70144787}, {'lng': 12.95222969, 'lat': 77.69999176}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.95084884, 'lat': 77.69784179}, {'lng': 12.95877995, 'lat': 77.70117934}, {'lng': 12.95016386, 'lat': 77.6995019}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.937305, 'lat': 77.70144}, {'lng': 12.96383172, 'lat': 77.53423874}, {'lng': 12.9481475, 'lat': 77.6988578}, {'lng': 12.93940761, 'lat': 77.69534615}, {'lng': 12.93940761, 'lat': 77.69534615}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.94900214, 'lat': 77.68707968}, {'lng': 12.95010705, 'lat': 77.70020935}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.96391437, 'lat': 77.70188065}, {'lng': 12.95676725, 'lat': 77.70119195}, {'lng': 12.9501325, 'lat': 77.69961132}, {'lng': 12.93417425, 'lat': 77.70070144}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.9629269, 'lat': 77.71208295}, {'lng': 12.95191435, 'lat': 77.6998021}, {'lng': 12.95010705, 'lat': 77.70020935}, {'lng': 12.95105552, 'lat': 77.69964779}, {'lng': 12.94611885, 'lat': 77.6986075}, {'lng': 12.94611885, 'lat': 77.6986075}, {'lng': 12.9490441, 'lat': 77.6877523}, {'lng': 12.9460849, 'lat': 77.69840035}, {'lng': 12.96391437, 'lat': 77.70188065}, {'lng': 12.9380185, 'lat': 77.69915494}, {'lng': 12.93452056, 'lat': 77.70111079}, {'lng': 12.939614, 'lat': 77.690648}, {'lng': 12.949468, 'lat': 77.695959}, {'lng': 12.93873545, 'lat': 77.69559842}, {'lng': 12.93922655, 'lat': 77.69578445}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.95452595, 'lat': 77.70270538}, {'lng': 12.93922655, 'lat': 77.69578445}, {'lng': 12.9565074, 'lat': 77.7046659}]\n  useEffect(() => {\n    const origin = {\n      lng: longitude,\n      lat: latitude,\n    }\n\n    let map = tt.map({\n      key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n      container: mapElement.current,\n      stylesVisibility: {\n        trafficIncidents: true,\n        trafficFlow: true\n      },\n      center: [longitude, latitude],\n      zoom: 14\n    });\n    setMap(map);\n\n    const addMarker = () => {\n      const element = document.createElement('div')\n      element.className = 'marker'\n      const marker = new tt.Marker({\n        element: element,\n      }).setLngLat([longitude,latitude])\n      .addTo(map)\n    }\n    addMarker();\n    \n\n    const sortDestinations = (locations) => {\n      const pointsForDestinations = locations.map((destination) => {\n        return convertToPoints(destination)\n      })\n      const callParameters = {\n        key:\"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n        destinations: pointsForDestinations,\n        origins: [convertToPoints(origin)],\n      }\n\n    return new Promise((resolve, reject) => {\n      ttapi.services\n        .matrixRouting(callParameters)\n        .then((matrixAPIResults) => {\n          const results = matrixAPIResults.matrix[0]\n          const resultsArray = results.map((result, index) => {\n            return {\n              location: locations[index],\n              drivingtime: result.response.routeSummary.travelTimeInSeconds,\n            }\n          })\n          resultsArray.sort((a, b) => {\n            return a.drivingtime - b.drivingtime\n          })\n          const sortedLocations = resultsArray.map((result) => {\n            return result.location\n          })\n          resolve(sortedLocations)\n        })\n      })\n    }\n\n\n    const recalculateRoutes = () => {\n      sortDestinations(destinations).then((sorted) => {\n        sorted.unshift(origin)\n\n        ttapi.services\n          .calculateRoute({\n            key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n            locations: sorted,\n          })\n          .then((routeData) => {\n            const geoJson = routeData.toGeoJson()\n            console.log(geoJson)\n            drawRoute(geoJson, map)\n        })\n      })\n    }\n    \n    for (let d in destinations) {\n      console.log(destinations[d]);\n      addDeliveryMarker(destinations[d],map);\n    }\n    recalculateRoutes()\n    map.on('click', (e) => {\n      destinations.push(e.lngLat)\n      console.log(e.lngLat)\n      addDeliveryMarker(e.lngLat, map)\n      recalculateRoutes()\n    })\n\n    return () => map.remove()\n    // callParameters = {\n    //   key: \"y1Duis78asfADSQn9HYekaSyUw4siXLf\",\n    //   destinations: pointsForDestinations,\n    //   origins: [convertToPoints(origin)],\n    // }\n    // return new Promise((resolve, reject) => {\n    // })\n\n  }, [longitude,latitude]);\n\n\n  return (\n    <div className=\"App\">\n      GROW SIMPLEE\n      <div className=\"map\" ref={mapElement}></div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}