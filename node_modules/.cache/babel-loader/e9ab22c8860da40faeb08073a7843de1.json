{"ast":null,"code":"'use strict';\n\nvar through = require('through2');\nvar writeDir = require('./write-dir');\nvar writeStream = require('./write-stream');\nvar writeBuffer = require('./write-buffer');\nvar writeSymbolicLink = require('./write-symbolic-link');\nvar fo = require('../../file-operations');\nfunction writeContents(optResolver) {\n  function writeFile(file, enc, callback) {\n    // Write it as a symlink\n    if (file.isSymbolic()) {\n      return writeSymbolicLink(file, optResolver, onWritten);\n    }\n\n    // If directory then mkdirp it\n    if (file.isDirectory()) {\n      return writeDir(file, optResolver, onWritten);\n    }\n\n    // Stream it to disk yo\n    if (file.isStream()) {\n      return writeStream(file, optResolver, onWritten);\n    }\n\n    // Write it like normal\n    if (file.isBuffer()) {\n      return writeBuffer(file, optResolver, onWritten);\n    }\n\n    // If no contents then do nothing\n    if (file.isNull()) {\n      return onWritten();\n    }\n\n    // This is invoked by the various writeXxx modules when they've finished\n    // writing the contents.\n    function onWritten(writeErr) {\n      var flags = fo.getFlags({\n        overwrite: optResolver.resolve('overwrite', file),\n        append: optResolver.resolve('append', file)\n      });\n      if (fo.isFatalOverwriteError(writeErr, flags)) {\n        return callback(writeErr);\n      }\n      callback(null, file);\n    }\n  }\n  return through.obj(writeFile);\n}\nmodule.exports = writeContents;","map":{"version":3,"names":["through","require","writeDir","writeStream","writeBuffer","writeSymbolicLink","fo","writeContents","optResolver","writeFile","file","enc","callback","isSymbolic","onWritten","isDirectory","isStream","isBuffer","isNull","writeErr","flags","getFlags","overwrite","resolve","append","isFatalOverwriteError","obj","module","exports"],"sources":["/home/krishnansh/Documents/WebDev/PS/notus-react-main/node_modules/vinyl-fs/lib/dest/write-contents/index.js"],"sourcesContent":["'use strict';\n\nvar through = require('through2');\n\nvar writeDir = require('./write-dir');\nvar writeStream = require('./write-stream');\nvar writeBuffer = require('./write-buffer');\nvar writeSymbolicLink = require('./write-symbolic-link');\n\nvar fo = require('../../file-operations');\n\nfunction writeContents(optResolver) {\n\n  function writeFile(file, enc, callback) {\n    // Write it as a symlink\n    if (file.isSymbolic()) {\n      return writeSymbolicLink(file, optResolver, onWritten);\n    }\n\n    // If directory then mkdirp it\n    if (file.isDirectory()) {\n      return writeDir(file, optResolver, onWritten);\n    }\n\n    // Stream it to disk yo\n    if (file.isStream()) {\n      return writeStream(file, optResolver, onWritten);\n    }\n\n    // Write it like normal\n    if (file.isBuffer()) {\n      return writeBuffer(file, optResolver, onWritten);\n    }\n\n    // If no contents then do nothing\n    if (file.isNull()) {\n      return onWritten();\n    }\n\n    // This is invoked by the various writeXxx modules when they've finished\n    // writing the contents.\n    function onWritten(writeErr) {\n      var flags = fo.getFlags({\n        overwrite: optResolver.resolve('overwrite', file),\n        append: optResolver.resolve('append', file),\n      });\n      if (fo.isFatalOverwriteError(writeErr, flags)) {\n        return callback(writeErr);\n      }\n\n      callback(null, file);\n    }\n\n  }\n\n  return through.obj(writeFile);\n}\n\nmodule.exports = writeContents;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEjC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIE,WAAW,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIG,WAAW,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAExD,IAAIK,EAAE,GAAGL,OAAO,CAAC,uBAAuB,CAAC;AAEzC,SAASM,aAAa,CAACC,WAAW,EAAE;EAElC,SAASC,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAE;IACtC;IACA,IAAIF,IAAI,CAACG,UAAU,EAAE,EAAE;MACrB,OAAOR,iBAAiB,CAACK,IAAI,EAAEF,WAAW,EAAEM,SAAS,CAAC;IACxD;;IAEA;IACA,IAAIJ,IAAI,CAACK,WAAW,EAAE,EAAE;MACtB,OAAOb,QAAQ,CAACQ,IAAI,EAAEF,WAAW,EAAEM,SAAS,CAAC;IAC/C;;IAEA;IACA,IAAIJ,IAAI,CAACM,QAAQ,EAAE,EAAE;MACnB,OAAOb,WAAW,CAACO,IAAI,EAAEF,WAAW,EAAEM,SAAS,CAAC;IAClD;;IAEA;IACA,IAAIJ,IAAI,CAACO,QAAQ,EAAE,EAAE;MACnB,OAAOb,WAAW,CAACM,IAAI,EAAEF,WAAW,EAAEM,SAAS,CAAC;IAClD;;IAEA;IACA,IAAIJ,IAAI,CAACQ,MAAM,EAAE,EAAE;MACjB,OAAOJ,SAAS,EAAE;IACpB;;IAEA;IACA;IACA,SAASA,SAAS,CAACK,QAAQ,EAAE;MAC3B,IAAIC,KAAK,GAAGd,EAAE,CAACe,QAAQ,CAAC;QACtBC,SAAS,EAAEd,WAAW,CAACe,OAAO,CAAC,WAAW,EAAEb,IAAI,CAAC;QACjDc,MAAM,EAAEhB,WAAW,CAACe,OAAO,CAAC,QAAQ,EAAEb,IAAI;MAC5C,CAAC,CAAC;MACF,IAAIJ,EAAE,CAACmB,qBAAqB,CAACN,QAAQ,EAAEC,KAAK,CAAC,EAAE;QAC7C,OAAOR,QAAQ,CAACO,QAAQ,CAAC;MAC3B;MAEAP,QAAQ,CAAC,IAAI,EAAEF,IAAI,CAAC;IACtB;EAEF;EAEA,OAAOV,OAAO,CAAC0B,GAAG,CAACjB,SAAS,CAAC;AAC/B;AAEAkB,MAAM,CAACC,OAAO,GAAGrB,aAAa"},"metadata":{},"sourceType":"script"}